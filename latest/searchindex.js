Search.setIndex({"docnames": ["changelog", "contribution-guide", "index", "reference/constants", "reference/decorators", "reference/exceptions", "reference/factories/attrs_factory", "reference/factories/base", "reference/factories/beanie_odm_factory", "reference/factories/dataclass_factory", "reference/factories/index", "reference/factories/msgspec_factory", "reference/factories/odmantic_odm_factory", "reference/factories/pydantic_factory", "reference/factories/sqlalchemy_factory", "reference/factories/typed_dict_factory", "reference/field_meta", "reference/fields", "reference/index", "reference/persistence", "reference/pytest_plugin", "reference/value_generators/complex_types", "reference/value_generators/constrained_collections", "reference/value_generators/constrained_dates", "reference/value_generators/constrained_numbers", "reference/value_generators/constrained_strings", "reference/value_generators/index", "reference/value_generators/primitives", "releases", "usage/configuration", "usage/declaring_factories", "usage/decorators", "usage/fields", "usage/fixtures", "usage/handling_custom_types", "usage/index", "usage/library_factories/index", "usage/library_factories/sqlalchemy_factory", "usage/model_coverage"], "filenames": ["changelog.rst", "contribution-guide.rst", "index.rst", "reference/constants.rst", "reference/decorators.rst", "reference/exceptions.rst", "reference/factories/attrs_factory.rst", "reference/factories/base.rst", "reference/factories/beanie_odm_factory.rst", "reference/factories/dataclass_factory.rst", "reference/factories/index.rst", "reference/factories/msgspec_factory.rst", "reference/factories/odmantic_odm_factory.rst", "reference/factories/pydantic_factory.rst", "reference/factories/sqlalchemy_factory.rst", "reference/factories/typed_dict_factory.rst", "reference/field_meta.rst", "reference/fields.rst", "reference/index.rst", "reference/persistence.rst", "reference/pytest_plugin.rst", "reference/value_generators/complex_types.rst", "reference/value_generators/constrained_collections.rst", "reference/value_generators/constrained_dates.rst", "reference/value_generators/constrained_numbers.rst", "reference/value_generators/constrained_strings.rst", "reference/value_generators/index.rst", "reference/value_generators/primitives.rst", "releases.rst", "usage/configuration.rst", "usage/declaring_factories.rst", "usage/decorators.rst", "usage/fields.rst", "usage/fixtures.rst", "usage/handling_custom_types.rst", "usage/index.rst", "usage/library_factories/index.rst", "usage/library_factories/sqlalchemy_factory.rst", "usage/model_coverage.rst"], "titles": ["Changelog", "Contributing", "Polyfactory", "constants", "decorators", "exceptions", "attrs_factory", "base_factory", "beanie_odm_factory", "dataclass_factory", "factories", "msgspec_factory", "odmantic_odm_factory", "pydantic_factory", "sqlalchemy_factory", "typed_dict_factory", "field_meta", "fields", "API Reference", "persistence", "pytest_plugin", "complex_types", "constrained_collections", "constrained_dates", "constrained_numbers", "constrained_strings", "value_generators", "primitives", "Polyfactory Releases", "Factory Configuration", "Declaring Factories", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">post_generated</span></code> decorator", "Factory Fields", "Pytest fixtures", "Handling Custom Types", "Usage Guide", "Polyfactory Factories", "SQLAlchemyFactory", "Model coverage generation"], "terms": {"all": [0, 1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 28, 29, 31, 32, 36, 38], "commit": [0, 1, 37], "thi": [0, 1, 2, 3, 6, 7, 11, 12, 13, 14, 16, 17, 18, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "project": 0, "file": [0, 1], "1d1c7f9": 0, "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 24, 28, 29, 30, 31, 32, 33, 34, 37, 38], "last": 0, "befor": [0, 1, 28, 38], "chang": [0, 1, 2, 28], "719495e": 0, "ignor": [0, 7, 17, 29, 38], "non": [0, 6, 7, 32], "column": [0, 14], "type": [0, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 29, 30, 31, 32, 33, 35, 36, 37], "510": 0, "adhtruong": 0, "bb04b4e": 0, "favour": 0, "sa": 0, "map": [0, 3, 7, 11, 12, 13, 14, 22, 32, 34, 37], "over": 0, "impl": 0, "513": 0, "fac9fba": 0, "upgrad": 0, "depend": [0, 1, 5, 24, 31, 36], "517": 0, "see": [0, 29, 38], "b44c68b": 0, "diff": 0, "c4e3d91": 0, "prefer": 0, "sqlalchemi": [0, 14, 36, 37], "exist": [0, 7, 8, 29, 30], "502": 0, "cofin": 0, "0f8f9e8": 0, "handl": [0, 13, 21, 24, 25, 35], "constrain": [0, 22, 24, 25], "union": [0, 29, 30, 32, 33], "properli": 0, "499": 0, "guac": 0, "61c8892": 0, "typo": 0, "use_default": 0, "497": 0, "timdumol": 0, "9e34fa7": 0, "add": [0, 1, 24, 29, 34, 37], "contributor": 0, "498": 0, "allcontributor": 0, "bot": 0, "46ecdc6": 0, "support": [0, 2, 6, 7, 8, 9, 11, 12, 13, 14, 15, 29, 30, 33, 37], "pydant": [0, 13, 24, 25, 30, 36], "v1": 0, "simultan": 0, "492": 0, "1078230": 0, "bump": 0, "pdm": [0, 1], "setup": [0, 1], "from": [0, 2, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 20, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38], "496": 0, "dependabot": 0, "2acfdc6": 0, "order": [0, 1], "import": [0, 2, 29, 30, 31, 32, 33, 34, 37, 38], "509": 0, "1ae2d52": 0, "move": 0, "correct": 0, "place": [0, 24, 29, 34], "495": 0, "83f2992": 0, "fa50e20": 0, "491": 0, "patch": [0, 28], "version": [0, 1, 2, 30], "8dc8e1a": 0, "fb4e50a": 0, "min": 0, "extens": [0, 7], "471": 0, "hsorski": 0, "40538c9": 0, "set": [0, 6, 7, 13, 22, 37], "default": [0, 7, 13, 16, 32, 34, 37], "factori": [0, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 31, 33, 35, 37, 38], "onli": [0, 7, 13, 28, 29, 30, 32, 36], "model": [0, 2, 6, 7, 9, 11, 12, 13, 14, 15, 16, 20, 29, 30, 35, 36, 37], "defin": [0, 7, 28, 30, 32, 34, 38], "479": 0, "c22633c": 0, "477": 0, "b9c2127": 0, "broken": 0, "uri": 0, "485": 0, "wer153": 0, "8f96365": 0, "486": 0, "7ec9eb0": 0, "code": [0, 34], "block": 0, "484": 0, "b33e662": 0, "allow": [0, 7, 11, 12, 13, 14, 17, 20, 32, 37], "us": [0, 1, 2, 3, 5, 7, 8, 13, 16, 17, 20, 24, 28, 30, 31, 33, 34, 35, 37, 38], "valu": [0, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25, 27, 32, 34, 38], "base": [0, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 24, 28, 30, 32, 36, 37], "configur": [0, 5, 14, 30, 35], "472": 0, "80bd012": 0, "recurs": [0, 21, 38], "guard": 0, "468": 0, "c7556e8": 0, "pass": [0, 2, 6, 7, 8, 13, 14, 17, 24, 32, 34], "config": [0, 7, 14, 20, 34], "483": 0, "94ad561": 0, "alia": [0, 8, 13, 30], "487": 0, "bb433a4": 0, "updat": 0, "pre": [0, 1], "478": 0, "2b57706": 0, "action": [0, 1], "cach": [0, 29], "488": 0, "minor": [0, 28], "fe05c4": 0, "b479e4a": 0, "flatten_annot": 0, "behaviour": 0, "option": [0, 1, 7, 17, 20, 24, 33, 36, 38], "440": [0, 1], "sam": 0, "6961eaa": 0, "don": [0, 29, 30], "t": [0, 6, 7, 8, 9, 11, 12, 13, 14, 17, 19, 22, 24, 25, 29, 30, 34, 37], "blindli": 0, "suppress": 0, "valueerror": 0, "450": 0, "623d8c9": 0, "__model__": [0, 2, 6, 7, 13, 29, 30], "452": 0, "mityuha": 0, "1407f07": 0, "github": [0, 1], "script": 0, "438": 0, "1a0da0d": 0, "python": [0, 3, 24], "448": 0, "231d311": 0, "codeql": 0, "458": 0, "2695880": 0, "dawidd6": 0, "download": 0, "artifact": 0, "459": 0, "fe342e4": 0, "upload": 0, "461": 0, "a371d7f": 0, "462": 0, "0e2f824": 0, "465": 0, "b7b88a8": 0, "70d49fd": 0, "case": [0, 28, 29, 30, 32, 34, 36, 38], "where": [0, 1, 14, 32, 38], "init": 0, "fals": [0, 7, 13, 14, 20, 22, 25, 27, 29, 37], "dataclass": [0, 2, 9, 29, 30, 31, 32, 33, 34, 36, 38], "attr": [0, 6, 30, 36], "433": 0, "6b7512d": 0, "correctli": [0, 34], "collect": [0, 7, 13, 16, 22], "item": [0, 22, 29], "436": 0, "2bad951": 0, "g0di": 0, "432": 0, "155f4a4": 0, "autofil": 0, "argument": [0, 6, 7, 21, 22, 30], "when": [0, 1, 5, 7, 13, 28, 29, 31, 32, 34, 38], "call": [0, 17, 20, 29, 32, 33], "create_factori": [0, 7, 30, 37], "receiv": [0, 28, 32], "429": 0, "b1e8b5": 0, "coverag": [0, 7, 21, 35], "batch": [0, 7, 17, 32, 33, 38], "gener": [0, 1, 2, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 21, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 37], "390": 0, "63aa272": 0, "caaee0f": 0, "requir": [0, 1, 2, 5, 6, 7, 17, 29, 36, 37], "nonrequir": 0, "annot": [0, 3, 6, 7, 13, 16, 38], "422": 0, "5d64bde": 0, "respect": [0, 29, 36], "overrid": [0, 7, 11, 12, 13, 14, 29, 30, 34], "nest": 0, "field": [0, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 21, 22, 30, 31, 35, 37, 38], "420": 0, "julioolvr": 0, "e819c2f": 0, "johnraz": 0, "413": 0, "0631d80": 0, "instal": [0, 1, 5, 37], "414": 0, "11f234c": 0, "reorder": 0, "418": 0, "a0465c6": 0, "425": 0, "5fefa41": 0, "check": [0, 1, 7], "declar": [0, 29, 32, 33, 35, 37], "belong": 0, "405": 0, "e1f7a47": 0, "constraint": [0, 13, 16, 23, 24, 27], "411": 0, "0717951": 0, "deprec": 0, "fieldmeta": [0, 6, 7, 8, 9, 11, 13, 14, 15, 16, 21, 22], "param": [0, 13], "417": 0, "prepar": 0, "427": 0, "f2c6fe1": 0, "8c88293": 0, "resolv": [0, 6, 37], "forward": [0, 6], "refer": [0, 29, 34], "383": 0, "0064240": 0, "makefil": 0, "399": 0, "jacobcoffe": 0, "89cd351": 0, "decoupl": 0, "length": [0, 7, 13, 16, 24, 25, 27, 38], "407": 0, "c1edfd5": 0, "build": [0, 1, 2, 5, 7, 8, 13, 17, 29, 30, 31, 32, 33, 34, 37], "404": 0, "cabe03c": 0, "385": 0, "410": 0, "79360f1": 0, "creation": 0, "provid": [0, 1, 5, 7, 29, 32, 34, 37, 38], "396": 0, "f555636": 0, "msgspec": [0, 2, 11, 36], "api": [0, 29, 32], "409": 0, "8ef78b8": 0, "altern": [0, 38], "389": 0, "eddb978": 0, "migrat": [0, 28], "full": [0, 7, 37, 38], "ruff": 0, "384": 0, "ebf30ff": 0, "2a20513": 0, "hint": [0, 2], "360": 0, "6cc7b03": 0, "attrsfactori": [0, 6, 30, 36], "370": 0, "8e41372": 0, "fixtur": [0, 17, 20, 35], "size": [0, 1, 7, 17, 29, 32, 33], "373": 0, "87a6749": 0, "371": 0, "anthonyjgraff": 0, "6f4b712": 0, "375": 0, "64c4e6c": 0, "374": 0, "more": [0, 2, 28, 29], "380": 0, "c76ffc9": 0, "implement": [0, 28, 30], "sqla": [0, 37], "369": 0, "fc0bf61": 0, "maintain": 0, "provinzkraut": 0, "f67f36e": 0, "contributorsrc": 0, "377": 0, "66e9db1": 0, "ec177ec": 0, "make": [0, 1, 28, 32, 36], "pytest": [0, 17, 20, 29, 32, 35], "stricter": 0, "363": 0, "sobolevn": 0, "95d24cb": 0, "skip": 0, "variabl": [0, 30], "dict": [0, 7, 11, 12, 13, 14, 17, 29, 30, 32, 34, 36], "odmant": [0, 2, 12, 36], "372": 0, "adccaf0": 0, "enabl": [0, 29], "publish": [0, 1], "pypi": 0, "trust": 0, "368": 0, "7af5469": 0, "f639c26": 0, "355": 0, "minimum": [0, 7, 13, 16, 24, 25, 27, 38], "359": 0, "091ee36": 0, "comment": 0, "custom": [0, 1, 2, 13, 24, 30, 32, 35], "361": 0, "7b46b57": 0, "3dba4b": 0, "venv": 0, "352": 0, "257852a": 0, "miss": [0, 5], "builtin": 0, "registr": 0, "351": 0, "e4daf5f": 0, "346": 0, "9ffe596": 0, "expos": [0, 30], "350": 0, "7a5a1c9": 0, "353": 0, "4f2e5d8": 0, "goldzih": 0, "161c0f6": 0, "checkout": [0, 36], "349": 0, "354": 0, "710d3ce": 0, "3ec7de8": 0, "ensur": 0, "faker": [0, 7, 23], "instanc": [0, 6, 7, 8, 9, 11, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27, 29, 32, 34, 38], "331": 0, "ea41bb": 0, "185504a9": 0, "339": 0, "510fabd": 0, "337": 0, "0228d3d": 0, "": [0, 2, 6, 7, 9, 11, 13, 14, 15, 16, 17, 24, 29, 32, 34], "awaredatetim": 0, "mock": [0, 2, 7, 8, 29, 32, 34], "333": 0, "bf04fa6": 0, "338": 0, "04a504b": 0, "725835e": 0, "core": [0, 2], "329": 0, "3e45f8f": 0, "2733497": 0, "json": 0, "315": 0, "3aeaa0c": 0, "string": [0, 6, 25, 27, 34], "determinist": [0, 29], "seed": [0, 7, 32], "becaus": [0, 2, 8, 29, 33], "urandom": 0, "seedabl": 0, "319": 0, "klimantj": 0, "61f1e2e": 0, "random": [0, 7, 13, 16, 24, 25, 27, 32], "321": 0, "2400fbe": 0, "includ": [0, 32, 36], "323": 0, "tcrasset": 0, "8ff7e0f": 0, "320": 0, "9def5b1": 0, "324": 0, "5543e66": 0, "health": 0, "322": 0, "5abe4b3": 0, "issu": [0, 1], "templat": 0, "e703593": 0, "0bfa3b4": 0, "litestar": [0, 28], "renam": 0, "new": [0, 2, 7, 28, 29], "link": [0, 1], "96c61ae": 0, "313": 0, "d385561": 0, "codeown": 0, "311": 0, "86585d0": 0, "7405901": 0, "remov": [0, 28], "strai": 0, "badg": 0, "306": 0, "b1f8f6e": 0, "charact": 0, "readm": 0, "c936389": 0, "poetri": 0, "308": 0, "09f896c": 0, "contribut": 0, "rst": 0, "310": 0, "3fadfb7": 0, "resolut": 0, "309": 0, "d331ae0": 0, "a2be35a": 0, "switch": 0, "seed_inst": 0, "305": 0, "f54f9f3": 0, "300": 0, "301": 0, "79e8145": 0, "7761834": 0, "abdulhaq": 0, "e": [0, 24, 32, 36], "297": 0, "2b050bb": 0, "16cbc99": 0, "956472c": 0, "appli": [0, 1, 28, 30], "sourceri": 0, "5cdfed3": 0, "79e50df": 0, "35e10da": 0, "263": 0, "d592836": 0, "local": [0, 29], "267": 0, "gsakki": 0, "2b8ae48": 0, "peterschutt": 0, "mainten": 0, "264": 0, "a53c598": 0, "imag": 0, "266": 0, "d0c8bfa": 0, "mdczaplicki": 0, "274": 0, "a7220f3": 0, "ai": 0, "271": 0, "946cf08": 0, "dep": 0, "e932f89": 0, "281": 0, "0c0ed22": 0, "adjust": 0, "284": 0, "285": 0, "5013069": 0, "26073c4": 0, "238": 0, "d625936": 0, "simsk": 0, "242": 0, "2b93de6": 0, "danielkatzan": 0, "261": 0, "1511c9e": 0, "gegnew": 0, "262": 0, "d355511": 0, "roeeyn": 0, "260": 0, "c686ddd": 0, "gigelu": 0, "259": 0, "9101134": 0, "reznikovroman": 0, "258": 0, "1e4df30": 0, "anthonyh209": 0, "257": 0, "c6657e7": 0, "avihai": 0, "yosef": 0, "256": 0, "97cdad2": 0, "iipin": 0, "254": 0, "9156cca": 0, "thorin": 0, "schiffer": 0, "253": 0, "02c1daa": 0, "lyz": 0, "252": 0, "e883d58": 0, "daanrademak": 0, "251": 0, "cd2e558": 0, "nguyent": 0, "250": 0, "af594e3": 0, "eltonch": 0, "249": 0, "bac2622": 0, "butch78": 0, "248": 0, "13e80a7": 0, "lindycod": 0, "247": 0, "3940de4": 0, "246": 0, "e598c7d": 0, "phbernard": 0, "245": 0, "24a7766": 0, "mciszczon": 0, "244": 0, "b8cfe1a": 0, "sondrelg": 0, "243": 0, "773b364": 0, "url": 0, "strict": 0, "241": 0, "00dce8a": 0, "reformat": 0, "aef7acb": 0, "b9ea84d": 0, "vshumilin97": 0, "237": 0, "36c2f2f": 0, "5bd544f": 0, "constant": [0, 18], "233": 0, "f2ba049": 0, "2e2f11a": 0, "9670d27": 0, "return": [0, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 34, 37], "224": 0, "02a4c97": 0, "221": 0, "d753504": 0, "typeddict": [0, 2, 7, 15, 16, 17, 29, 30, 32], "d671ac2": 0, "47d234b": 0, "1d5c645": 0, "md": 0, "format": [0, 1], "197": 0, "f767011": 0, "sygutss": 0, "201": 0, "36ff02e": 0, "chrisbeardi": 0, "207": 0, "a62c976": 0, "postgener": [0, 4, 7, 17, 29, 31], "classmethod": [0, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 29, 31, 32, 34], "204": 0, "af36991": 0, "200": 0, "1f8d94c": 0, "60cdb30": 0, "185": 0, "8b5d903": 0, "przybylop": 0, "187": 0, "16f562f": 0, "194": 0, "cb71cd0": 0, "8097da7": 0, "contrib": 0, "placement": 0, "0814bb8": 0, "170": 0, "co": 0, "author": [0, 37], "46447321": 0, "user": [0, 7, 29, 30], "norepli": 0, "com": 0, "60511c9": 0, "171": 0, "3853048": 0, "173": 0, "5f111e4": 0, "ad": [0, 28, 36], "creat": [0, 2, 7, 8, 13, 14, 16, 17, 20, 29, 30], "method": [0, 4, 7, 8, 11, 12, 13, 14, 16, 17, 24, 29, 30, 32, 33, 34], "b1f83b3": 0, "improv": [0, 1], "inherit": [0, 1], "5293860": 0, "note": [0, 7, 11, 12, 13, 14], "7ae2678": 0, "explain": [0, 29, 35], "how": [0, 35], "subclass": [0, 7, 8, 13, 30], "modelfactori": [0, 6, 7, 8, 9, 11, 12, 13, 14, 15, 30, 36], "your": [0, 1, 34], "218522f": 0, "91": 0, "4c2b931": 0, "brand": 0, "25570f5": 0, "polyfactori": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38], "banner": 0, "logo": 0, "pizza": 1, "deliveri": 1, "man": 1, "g": [1, 32, 36], "virtual": 1, "If": [1, 7, 13, 29, 34], "you": [1, 29, 30, 32, 33, 34, 38], "re": [1, 32, 38], "work": [1, 2, 28, 34], "need": [1, 6, 29, 30, 32, 34], "extra": [1, 34], "hook": 1, "fork": 1, "repositori": 1, "clone": 1, "git": 1, "linter": 1, "formatt": 1, "step": 1, "execut": 1, "automat": [1, 6, 7, 37], "mai": [1, 28], "want": [1, 2], "manual": 1, "fix": 1, "push": 1, "open": 1, "pull": 1, "request": 1, "give": [1, 32], "descript": 1, "titl": 1, "indic": [1, 7], "what": [1, 7, 34], "ha": [1, 29, 32, 38], "correspond": 1, "For": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 28, 29, 30, 31, 32, 38], "exampl": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 25, 28, 29, 30, 31, 32, 33, 34, 37, 38], "bug": 1, "increas": 1, "stack": 1, "imposs": 1, "find": 1, "needl": 1, "could": [1, 32], "easier": 1, "fire": 1, "haystack": 1, "follow": [1, 28], "convent": 1, "The": [1, 2, 6, 7, 13, 14, 17, 19, 24, 28, 30, 34, 35, 36, 37, 38], "locat": 1, "directori": 1, "built": [1, 21, 30], "rest": 1, "sphinx": 1, "unfamiliar": 1, "ani": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 28, 29, 30, 32, 34, 36], "those": 1, "restructuredtext": 1, "primer": 1, "quickstart": 1, "ar": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 24, 28, 29, 30, 32, 33, 34, 36, 37, 38], "recommend": 1, "read": [1, 29], "we": [1, 2, 8, 28, 29, 32, 33, 34, 36], "welcom": 1, "enhanc": 1, "usabl": 1, "shibuya": 1, "which": [1, 2, 30, 32, 34], "come": [1, 30], "lot": 1, "out": [1, 28], "box": 1, "wish": 1, "style": 1, "static": 1, "site": 1, "should": [1, 7, 13, 22, 28, 29, 32, 34], "consult": 1, "first": [1, 29, 38], "To": [1, 29, 33, 34], "Then": 1, "can": [1, 2, 6, 7, 21, 22, 24, 28, 29, 30, 32, 33, 34, 37, 38], "serv": 1, "them": 1, "content": [1, 38], "feel": 1, "free": 1, "clarifi": 1, "text": 1, "restructur": 1, "etc": [1, 29], "sure": [1, 36], "guidelin": 1, "idiomat": 1, "english": 1, "simpl": [1, 2, 32], "languag": 1, "keep": 1, "self": [1, 16, 20, 29, 34], "contain": [1, 16, 18, 21, 35, 38], "applic": 1, "intersphinx": 1, "wherev": 1, "possibl": [1, 2, 32], "referenc": 1, "extern": 1, "librari": [1, 2, 7, 28, 29, 30, 32, 34, 36], "diagram": 1, "mermaidj": 1, "increment": [1, 24], "pyproject": 1, "toml": 1, "semant": [1, 28, 32], "pep": 1, "In": [1, 29, 30, 32, 33, 34, 37, 38], "go": [1, 28], "tab": 1, "pick": 1, "draft": 1, "tag": 1, "both": [1, 29, 37], "vx": 1, "x": [1, 28], "fill": 1, "let": [1, 32], "do": [1, 29, 32, 34, 36], "approv": 1, "successfulli": 1, "power": 2, "data": [2, 7, 8, 14, 16, 19, 29, 32], "around": 2, "struct": [2, 11, 36], "pip": 2, "minim": [2, 22, 24, 29], "dataclassfactori": [2, 6, 7, 8, 9, 11, 12, 13, 14, 15, 29, 30, 31, 32, 33, 34, 36, 38], "class": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 24, 29, 30, 31, 32, 33, 34, 36, 37, 38], "person": [2, 29, 30, 32, 33, 34], "name": [2, 7, 13, 16, 17, 20, 29, 30, 31, 32, 33, 37], "str": [2, 7, 13, 14, 16, 17, 20, 25, 27, 29, 30, 32, 33, 34, 37, 38], "ag": [2, 29, 30, 32, 33, 38], "float": [2, 24, 27, 29, 30, 32, 33], "height": [2, 29, 30], "weight": [2, 29, 30], "personfactori": [2, 29, 30, 32, 33, 34], "def": [2, 29, 30, 31, 32, 33, 34, 37, 38], "test_is_person": [2, 30], "none": [2, 4, 6, 7, 8, 13, 14, 16, 17, 20, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 37, 38], "person_inst": [2, 29, 30, 32, 33, 34], "assert": [2, 29, 30, 31, 32, 33, 34, 37, 38], "isinst": [2, 29, 30, 32, 33, 34, 37, 38], "That": [2, 30], "almost": [2, 24], "abl": 2, "object": [2, 4, 7, 13, 16, 17, 20], "fit": 2, "definit": [2, 7, 29, 30], "inform": 2, "avail": [2, 30, 37], "sourc": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27], "truth": 2, "pars": 2, "store": [2, 16, 17, 29], "dictionari": [2, 7, 11, 12, 13, 14, 16, 29, 32], "kwarg": [2, 5, 6, 7, 8, 13, 17, 19, 24, 29, 32, 33], "constructor": [2, 24], "prior": 2, "2": [2, 28, 29, 30, 32, 37, 38], "wa": [2, 17, 28], "known": 2, "under": [2, 32], "gain": 2, "quit": 2, "bit": 2, "popular": 2, "A": [2, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 37], "main": [2, 7, 28], "motiv": 2, "0": [2, 7, 28, 29, 30, 32, 37, 38], "releas": 2, "than": [2, 23, 24, 32], "just": 2, "someth": 2, "also": [2, 29, 30, 33], "its": [2, 29, 31, 32], "architectur": 2, "As": [2, 29, 33, 36, 38], "would": 2, "longer": 2, "directli": [2, 32], "ti": 2, "chosen": [2, 29], "reflect": 2, "capabl": [2, 13], "It": 2, "beani": [2, 8, 36], "odm": [2, 29], "well": [2, 29], "concret": [3, 30, 34], "normal": [3, 16, 33], "3": [3, 28, 31, 37, 38], "9": 3, "post_gener": [4, 35], "descriptor": 4, "wrap": [4, 17, 29, 31, 33], "__init__": [4, 13, 14, 16, 17, 19, 20, 24, 34], "callabl": [4, 7, 11, 12, 13, 14, 17, 20, 22, 24, 25, 32, 33, 34, 37], "factoryexcept": 5, "error": [5, 7, 38], "configurationexcept": [5, 29], "misconfigur": 5, "parameterexcept": [5, 17], "paramet": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32], "wrong": 5, "missingbuildkwargexcept": [5, 32], "missingdependencyexcept": 5, "importerror": 5, "basefactori": [6, 7, 9, 11, 13, 14, 15, 20, 21, 22, 29, 36, 37, 38], "attribut": [6, 7, 17, 29, 30, 31, 32, 37], "an": [6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 32, 34, 36, 38], "except": [6, 7, 18, 29, 32], "rais": [6, 7, 17, 29, 32], "infer": [6, 7], "__is_base_factory__": [6, 7, 8, 9, 11, 12, 13, 14, 15, 34, 37], "bool": [6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 20, 22, 24, 25, 27, 38], "true": [6, 7, 8, 9, 11, 12, 13, 14, 15, 24, 29, 34, 37], "flag": [6, 7, 8, 9, 11, 12, 13, 14, 15, 16], "dictat": [6, 7, 8, 9, 11, 12, 13, 14, 15, 24, 38], "whether": [6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 22, 24, 25, 27], "regist": [6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 20, 33], "global": [6, 7, 8, 9, 11, 12, 13, 14, 15, 32], "handler": [6, 7, 8, 9, 11, 12, 13, 14, 15, 37], "typeddictfactori": [6, 7, 8, 9, 11, 12, 13, 14, 15, 29, 30, 32, 36], "is_supported_typ": [6, 7, 8, 9, 11, 12, 13, 14, 15], "typeguard": [6, 7, 8, 9, 11, 12, 13, 14, 15], "determin": [6, 7, 8, 9, 11, 12, 13, 14, 15, 24], "given": [6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 24, 27, 29, 32], "arbitrari": [6, 7, 8, 9, 11, 12, 13, 14, 15, 17], "get_model_field": [6, 7, 9, 11, 13, 14, 15], "list": [6, 7, 8, 9, 11, 13, 14, 15, 16, 19, 22, 29, 30, 32, 33, 36, 37, 38], "field_meta": [6, 7, 8, 9, 11, 13, 14, 15, 18, 21, 22, 24], "retriev": [6, 7, 9, 11, 13, 14, 15], "metadata": [6, 7, 9, 11, 13, 14, 15, 16, 37], "resolve_typ": 6, "buildcontext": [7, 8], "abc": [7, 36], "hold": 7, "logic": [7, 8, 29], "__check_model__": [7, 14, 29], "done": [7, 30], "against": 7, "construct": 7, "__allow_none_optionals__": [7, 14, 29], "classvar": [7, 14], "randomli": [7, 29, 32], "__sync_persistence__": [7, 29, 37], "syncpersistenceprotocol": [7, 14, 19, 29], "sync": [7, 14, 19, 29, 32], "persist": [7, 8, 14, 18], "__async_persistence__": [7, 8, 29], "asyncpersistenceprotocol": [7, 8, 14, 19, 29], "async": [7, 8, 14, 19, 29], "__set_as_default_factory_for_type__": [7, 14, 29], "instead": [7, 29, 32], "dynam": [7, 14, 29, 30], "__base_factory_overrides__": 7, "replac": 7, "__faker__": [7, 14, 29, 31], "proxi": 7, "__random__": [7, 14, 29, 31, 32], "__random_seed__": [7, 29], "int": [7, 13, 16, 17, 22, 24, 25, 27, 29, 30, 32, 33, 37, 38], "integ": [7, 24, 27], "control": [7, 29, 32, 33], "__randomize_collection_length__": [7, 14, 29, 37], "__min_collection_length__": [7, 14, 29, 37, 38], "__max_collection_length__": [7, 14, 29, 38], "5": [7, 29], "maximum": [7, 13, 16, 24, 25, 27, 38], "__use_defaults__": [7, 14, 29], "specif": 7, "__config_keys__": [7, 14, 34], "tupl": [7, 14, 16, 24, 29], "kei": [7, 14, 37], "consid": [7, 14, 24], "is_factory_typ": 7, "boolean": [7, 13, 16, 24, 27], "is_batch_factory_typ": 7, "sequenc": [7, 13, 16], "extract_field_build_paramet": 7, "build_arg": 7, "extract": 7, "meta": [7, 13, 16, 21, 22], "abstract": [7, 32, 36], "seed_random": 7, "is_ignored_typ": 7, "meant": [7, 17, 30], "overwritten": 7, "other": [7, 17, 28, 29, 30, 32, 36, 37], "get_provider_map": [7, 11, 12, 13, 14, 34], "distinct": [7, 11, 12, 13, 14], "f": 7, "current": [7, 28, 30, 31, 38], "otherwis": [7, 8], "get_field_valu": [7, 8], "field_build_paramet": [7, 8], "build_context": [7, 8], "get_field_value_coverag": 7, "iter": 7, "should_set_none_valu": 7, "should_use_default_valu": [7, 29], "should_set_field_valu": [7, 13], "field_nam": [7, 13], "get_factory_field": 7, "try": 7, "smart": 7, "about": [7, 16, 29], "dunder": [7, 29], "some": [7, 29, 30, 34], "parent": [7, 30], "made": [7, 13, 28], "process_kwarg": 7, "process": [7, 29], "result": [7, 14, 17, 19, 21, 25, 27, 29, 32, 33], "process_kwargs_coverag": 7, "n": [7, 29], "sub": [7, 30, 38], "create_sync": [7, 29, 37], "synchron": [7, 14, 19, 29], "singl": [7, 8, 14, 19, 29], "create_batch_sync": [7, 29], "create_async": [7, 29, 37], "asynchron": [7, 14, 19, 29], "create_batch_async": [7, 29], "beaniepersistencehandl": 8, "save": [8, 14, 19, 29], "mongodb": 8, "save_mani": [8, 14, 19, 29], "multipl": [8, 14, 19, 24], "cannot": [8, 29, 33, 34], "insert_mani": 8, "here": [8, 29, 37], "doesn": 8, "beaniedocumentfactori": [8, 36], "document": [8, 18, 28, 29, 36], "base_factori": 10, "dataclass_factori": [10, 29, 38], "typed_dict_factori": 10, "pydantic_factori": [10, 30, 36], "msgspec_factori": 10, "odmantic_odm_factori": 10, "beanie_odm_factori": 10, "attrs_factori": [10, 30], "sqlalchemy_factori": [10, 37], "msgspecfactori": [11, 36], "odmanticmodelfactori": [12, 36], "pydanticconstraint": 13, "regard": [13, 16], "pydanticfieldmeta": 13, "modelfield": 13, "ellipsi": 13, "children": [13, 16], "from_field_info": 13, "field_info": 13, "fieldinfo": 13, "use_alia": 13, "randomize_collection_length": [13, 16], "min_collection_length": [13, 16], "max_collection_length": [13, 16], "info": 13, "from_model_field": 13, "model_field": 13, "_sphinx_paramlinks_polyfactori": 13, "number": [13, 16, 22, 24, 38], "element": [13, 16], "get_constraints_metadata": [13, 16], "get": [13, 14, 16, 24, 30, 32], "factory_use_construct": 13, "valid": [13, 24, 30, 32], "instanti": 13, "is_custom_root_field": 13, "root": 13, "sqlasyncpersist": 14, "session": [14, 20, 37], "sqlafactori": 14, "sqlaasyncpersist": 14, "asyncsess": 14, "sqlalchemyfactori": [14, 36], "__set_primary_key__": 14, "primari": 14, "__set_foreign_keys__": 14, "foreign": [14, 37], "__set_relationships__": [14, 37], "relationship": [14, 37], "properti": [14, 16], "get_sqlalchemy_typ": 14, "typeddictt": 15, "null": 16, "sentinel": 16, "empti": 16, "urlconstraint": 16, "type_arg": 16, "arg": [16, 17, 19, 24, 32], "from_typ": 16, "builder": 16, "wrappedcal": 17, "ref": 17, "util": 17, "prevent": 17, "bind": 17, "mark": [17, 29], "time": [17, 28, 32, 36], "p": 17, "invok": [17, 32], "whenev": 17, "fn": 17, "to_valu": 17, "output": [17, 24, 29, 38], "after": [17, 31], "design": [17, 28, 32], "post": [17, 31, 32], "callback": [17, 24], "section": [18, 29, 35], "packag": [18, 20, 36], "decor": [18, 20, 30, 33, 35], "pytest_plugin": [18, 33], "value_gener": [18, 21, 22, 23, 24, 25, 27], "protocol": [19, 24], "factoryfixtur": 20, "scope": [20, 32], "liter": [20, 38], "modul": [20, 36], "function": [20, 24, 28, 29, 32, 38], "autous": 20, "__call__": [20, 24], "register_fixtur": [20, 33], "auto": 20, "handle_collection_typ": 21, "container_typ": 21, "accept": [21, 22, 33], "handle_collection_type_coverag": 21, "unresolv": 21, "handle_constrained_collect": 22, "collection_typ": 22, "item_typ": 22, "max_item": 22, "min_item": 22, "unique_item": 22, "maxim": [22, 24], "uniqu": 22, "handle_constrained_map": 22, "handle_constrained_d": 23, "ge": [23, 24], "date": [23, 29, 30, 32, 33], "gt": [23, 24], "le": [23, 24], "lt": [23, 24], "tz": 23, "tzinfo": 23, "datetim": [23, 29, 30, 31, 32, 33], "timezon": 23, "utc": 23, "fulfil": [23, 30], "expect": [23, 28, 38], "less": [23, 24], "equal": [23, 24], "greater": [23, 24], "numbergeneratorprotocol": 24, "numer": 24, "signatur": [24, 32], "almost_equal_float": 24, "value_1": 24, "value_2": 24, "delta": [24, 32], "1e": 24, "08": 24, "two": 24, "problemat": 24, "comparison": 24, "is_multiply_of_multiple_of_in_rang": 24, "multiple_of": 24, "least": 24, "one": [24, 29, 30, 32], "multipli": 24, "li": 24, "rang": [24, 32], "between": [24, 29], "passes_pydantic_multiple_valid": 24, "anoth": [24, 38], "get_incr": 24, "t_type": [24, 25], "small": 24, "entri": 24, "get_value_or_non": 24, "equal_valu": 24, "get_constrained_number_rang": 24, "primit": [24, 26], "decim": [24, 27], "generate_constrained_numb": 24, "handle_constrained_int": 24, "handle_constrained_float": 24, "validate_max_digit": 24, "max_digit": 24, "decimal_plac": 24, "max": 24, "digit": 24, "handle_decimal_length": 24, "generated_decim": 24, "handle_constrained_decim": 24, "handle_constrained_string_or_byt": 25, "lower_cas": [25, 27], "upper_cas": [25, 27], "min_length": [25, 27], "max_length": [25, 27], "pattern": [25, 32], "byte": [25, 27], "constr": 25, "conbyt": 25, "lowercas": [25, 27], "uppercas": [25, 27], "regex": 25, "complex_typ": 26, "constrained_collect": 26, "constrained_d": 26, "constrained_numb": 26, "constrained_str": 26, "create_random_float": 27, "create_random_integ": 27, "create_random_decim": 27, "create_random_byt": 27, "create_random_str": 27, "create_random_boolean": 27, "outlin": 28, "structur": 28, "stabil": 28, "guarante": 28, "standard": 28, "major": 28, "schema": 28, "backward": 28, "incompat": 28, "have": [28, 29, 38], "been": [28, 29], "compat": 28, "manner": 28, "bugfix": 28, "were": 28, "alpha": 28, "beta": 28, "candid": 28, "rc": 28, "release_typ": 28, "0alpha1": 28, "0beta1": 28, "0rc1": 28, "earli": 28, "develop": 28, "preview": 28, "featur": 28, "complet": [28, 32], "break": 28, "occur": 28, "stabl": 28, "freez": 28, "until": 28, "final": [28, 38], "suitabl": 28, "test": [28, 29], "upcom": 28, "life": 28, "seri": 28, "These": [28, 36], "period": 28, "warn": 28, "continu": 28, "next": 28, "1": [28, 29, 32, 37, 38], "throughout": 28, "At": 28, "organ": 28, "activ": 28, "previou": [28, 29], "special": [28, 29, 34], "drop": 28, "select": 28, "backport": 28, "older": 28, "sever": [28, 32], "feasibl": 28, "each": [28, 34, 38], "cycl": 28, "consist": [28, 32], "few": [28, 32], "phase": 28, "plan": 28, "roadmap": 28, "spec": 28, "begin": 28, "end": 28, "branch": 28, "b": 28, "progress": 28, "becom": 28, "avoid": [28, 32], "regress": 28, "doubl": 29, "underscor": 29, "below": [29, 30], "discuss": 29, "depth": [29, 38], "cl": [29, 31, 32, 34], "choic": [29, 32], "john": 29, "alic": 29, "georg": 29, "test_random_se": 29, "outcom": 29, "produc": 29, "affect": [29, 32], "10": 29, "test_setting_random": 29, "ident": 29, "differ": 29, "being": [29, 32], "actual": 29, "embed": 29, "insid": [29, 30], "complex": 29, "es_": 29, "test_setting_fak": 29, "spanish": 29, "alejandra": 29, "romeu": 29, "tolosa": 29, "abov": [29, 32, 33, 34, 36, 37, 38], "understand": [29, 32], "why": 29, "four": 29, "must": [29, 31, 33], "specifi": [29, 30], "asyncio": 29, "sleep": 29, "uuid": [29, 30, 32, 33, 34], "id": [29, 30, 32, 33, 34, 37], "mock_db": 29, "syncpersistencehandl": 29, "stuff": 29, "orm": [29, 37], "redi": 29, "our": [29, 34], "simpli": 29, "same": [29, 30, 38], "asyncpersistencehandl": 29, "await": 29, "0001": 29, "again": 29, "test_sync_persistence_build": 29, "test_sync_persistence_batch": 29, "person_batch": 29, "test_async_persistence_build": 29, "test_async_persistence_batch": 29, "With": 29, "now": [29, 31, 32], "intervent": 29, "onc": 29, "reus": 29, "petfactori": [29, 30, 32], "enum": [29, 30, 32], "speci": [29, 30, 32], "cat": [29, 30, 32], "dog": [29, 30, 32], "pet": [29, 30, 32], "sound": [29, 30, 32], "hobbi": [29, 30, 32, 33], "birthdai": [29, 30, 32, 33], "asset": [29, 30, 32], "test_dynamic_factory_gener": [29, 30], "len": [29, 30, 32, 33, 34, 38], "roxi": [29, 32], "spammi": 29, "mosh": 29, "test_default_pet_factori": 29, "By": [29, 37], "owner": 29, "car": [29, 38], "ownerfactori": 29, "test_randomized_collection_length": 29, "alwai": 29, "treat": 29, "disabl": 29, "test_optional_type_ignor": 29, "trigger": 29, "test_check_factory_field": 29, "match": 29, "unknown_field": 29, "part": 29, "lambda": [29, 32, 34], "foo": 29, "fine": 29, "grain": 29, "effect": 29, "sinc": [29, 30], "meow": 29, "test_use_default": 29, "syntax": 30, "omit": 30, "13": 30, "export": [30, 32, 36], "Or": [30, 32, 37], "basemodel": 30, "3rd": [30, 34], "parti": [30, 34], "long": 30, "stdlib": [30, 32], "interfac": 30, "alias": [30, 33], "date_of_birth": 30, "privat": 30, "_asset": 30, "test_person_factori": [30, 33], "neither": 30, "nor": 30, "although": 30, "primarili": 30, "intern": 30, "test_imperative_factory_cr": 30, "pet_factori": 30, "pet_inst": [30, 32], "eventu": 30, "rabbit": 30, "mous": 30, "test_imperative_sub_factory_cr": 30, "cat_factori": 30, "cat_inst": 30, "usual": 31, "timedelta": [31, 32], "cast": 31, "datetimerang": [31, 32], "to_dt": [31, 32], "from_dt": [31, 32], "default_factori": [31, 32], "datetimerangefactori": [31, 32], "time_delta": 31, "3d": 31, "test_post_gener": [31, 32], "date_range_inst": [31, 32], "dai": [31, 32], "nonetheless": 32, "cover": 32, "look": 32, "hardcod": [32, 34], "woof": 32, "test_is_pet_inst": 32, "though": 32, "often": 32, "desir": 32, "restrict": [32, 33], "like": [32, 37], "ralph": 32, "test_pet_choic": 32, "mere": 32, "cleaner": 32, "simpler": 32, "fact": 32, "thu": 32, "write": 32, "so": [32, 34, 36, 37, 38], "easi": 32, "nice": 32, "access": [32, 33], "itself": [32, 33, 37], "intent": 32, "while": 32, "own": [32, 34], "attach": 32, "wai": 32, "rather": 32, "mean": 32, "test_id_is_ignor": 32, "test_id_is_requir": 32, "alreadi": 32, "most": [32, 38], "best": 32, "helper": 32, "add_timedelta": 32, "cb": 32, "themselv": 32, "usag": [32, 37], "test_subfactori": 32, "person_instance_with_pet_nam": 32, "winston": 32, "register_fixture_decor": 33, "nick": 33, "person_factori": 33, "overcom": 33, "separ": 33, "without": 33, "person_factory_fixtur": 33, "still": 33, "another_person_inst": 33, "aliased_person_factori": 33, "classroom": 33, "teacher": 33, "pupil": 33, "classroomfactori": 33, "ludmilla": 33, "newman": 33, "20": 33, "test_fixture_field": 33, "classroom_inst": 33, "similar": 33, "propag": 33, "sometim": 34, "either": 34, "codebas": 34, "achiev": 34, "extend": [34, 36], "providers_map": 34, "customsecret": 34, "__repr__": 34, "__str__": 34, "secret": 34, "unknown": 34, "super": 34, "jeronimo": 34, "test_custom_secret_cr": 34, "repr": 34, "appropri": 34, "great": 34, "localis": 34, "fashion": 34, "mani": 34, "lead": 34, "unnecessari": 34, "duplic": 34, "solut": 34, "typevar": 34, "customdataclassfactori": 34, "test_custom_dataclass_base_factori": 34, "onto": 34, "addit": 36, "thei": 36, "namespac": 36, "basic": 37, "declarativebas": 37, "mapped_column": 37, "__tablename__": 37, "primary_kei": 37, "authorfactori": 37, "test_sqla_factori": 37, "4": 37, "overridden": 37, "via": 37, "foreignkei": 37, "book": 37, "uselist": 37, "author_id": 37, "authorfactorywithrelationship": 37, "test_sqla_factory_without_relationship": 37, "yourself": 37, "__session__": 37, "create_engin": 37, "test_sqla_factory_persist": 37, "engin": 37, "sqlite": 37, "memori": 37, "create_al": 37, "customis": 37, "further": 37, "similarli": 37, "__async_session__": 37, "combin": 37, "up": 37, "back_popul": 37, "nullabl": 37, "test_custom_sqla_factori": 37, "doc": 37, "approach": 38, "attempt": 38, "form": 38, "take": 38, "__future__": 38, "boat": 38, "can_float": 38, "profil": 38, "favourite_color": 38, "red": 38, "green": 38, "blue": 38, "vehicl": 38, "profilefactori": 38, "test_profile_coverag": 38, "largest": 38, "varianc": 38, "notic": 38, "exhaust": 38, "particular": 38, "socialgroup": 38, "member": 38, "socialgroupfactori": 38, "test_social_group_coverag": 38, "group": 38, "caus": 38, "recursionerror": 38, "exceed": 38}, "objects": {"polyfactory": [[3, 0, 0, "-", "constants"], [4, 0, 0, "-", "decorators"], [5, 0, 0, "-", "exceptions"], [16, 0, 0, "-", "field_meta"], [17, 0, 0, "-", "fields"], [19, 0, 0, "-", "persistence"], [20, 0, 0, "-", "pytest_plugin"]], "polyfactory.decorators": [[4, 1, 1, "", "post_generated"]], "polyfactory.decorators.post_generated": [[4, 2, 1, "", "__init__"]], "polyfactory.exceptions": [[5, 3, 1, "", "ConfigurationException"], [5, 3, 1, "", "FactoryException"], [5, 3, 1, "", "MissingBuildKwargException"], [5, 3, 1, "", "MissingDependencyException"], [5, 3, 1, "", "ParameterException"]], "polyfactory.factories": [[6, 0, 0, "-", "attrs_factory"], [7, 0, 0, "-", "base"], [8, 0, 0, "-", "beanie_odm_factory"], [9, 0, 0, "-", "dataclass_factory"], [11, 0, 0, "-", "msgspec_factory"], [12, 0, 0, "-", "odmantic_odm_factory"], [13, 0, 0, "-", "pydantic_factory"], [14, 0, 0, "-", "sqlalchemy_factory"], [15, 0, 0, "-", "typed_dict_factory"]], "polyfactory.factories.attrs_factory": [[6, 1, 1, "", "AttrsFactory"]], "polyfactory.factories.attrs_factory.AttrsFactory": [[6, 4, 1, "", "__is_base_factory__"], [6, 4, 1, "", "__model__"], [6, 2, 1, "", "get_model_fields"], [6, 2, 1, "", "is_supported_type"], [6, 2, 1, "", "resolve_types"]], "polyfactory.factories.attrs_factory.AttrsFactory.is_supported_type.params": [[6, 5, 1, "", "value"]], "polyfactory.factories.attrs_factory.AttrsFactory.resolve_types.params": [[6, 5, 1, "", "kwargs"], [6, 5, 1, "", "model"]], "polyfactory.factories.base": [[7, 1, 1, "", "BaseFactory"], [7, 1, 1, "", "BuildContext"]], "polyfactory.factories.base.BaseFactory": [[7, 4, 1, "", "__allow_none_optionals__"], [7, 4, 1, "", "__async_persistence__"], [7, 4, 1, "", "__base_factory_overrides__"], [7, 4, 1, "", "__check_model__"], [7, 4, 1, "", "__config_keys__"], [7, 4, 1, "", "__faker__"], [7, 4, 1, "", "__is_base_factory__"], [7, 4, 1, "", "__max_collection_length__"], [7, 4, 1, "", "__min_collection_length__"], [7, 4, 1, "", "__model__"], [7, 4, 1, "", "__random__"], [7, 4, 1, "", "__random_seed__"], [7, 4, 1, "", "__randomize_collection_length__"], [7, 4, 1, "", "__set_as_default_factory_for_type__"], [7, 4, 1, "", "__sync_persistence__"], [7, 4, 1, "", "__use_defaults__"], [7, 2, 1, "", "batch"], [7, 2, 1, "", "build"], [7, 2, 1, "", "coverage"], [7, 2, 1, "", "create_async"], [7, 2, 1, "", "create_batch_async"], [7, 2, 1, "", "create_batch_sync"], [7, 2, 1, "", "create_factory"], [7, 2, 1, "", "create_sync"], [7, 2, 1, "", "extract_field_build_parameters"], [7, 2, 1, "", "get_factory_fields"], [7, 2, 1, "", "get_field_value"], [7, 2, 1, "", "get_field_value_coverage"], [7, 2, 1, "", "get_model_fields"], [7, 2, 1, "", "get_provider_map"], [7, 2, 1, "", "is_batch_factory_type"], [7, 2, 1, "", "is_factory_type"], [7, 2, 1, "", "is_ignored_type"], [7, 2, 1, "", "is_supported_type"], [7, 2, 1, "", "process_kwargs"], [7, 2, 1, "", "process_kwargs_coverage"], [7, 2, 1, "", "seed_random"], [7, 2, 1, "", "should_set_field_value"], [7, 2, 1, "", "should_set_none_value"], [7, 2, 1, "", "should_use_default_value"]], "polyfactory.factories.base.BaseFactory.batch.params": [[7, 5, 1, "", "kwargs"], [7, 5, 1, "", "size"]], "polyfactory.factories.base.BaseFactory.build.params": [[7, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.coverage.params": [[7, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.create_async.params": [[7, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.create_batch_async.params": [[7, 5, 1, "", "kwargs"], [7, 5, 1, "", "size"]], "polyfactory.factories.base.BaseFactory.create_batch_sync.params": [[7, 5, 1, "", "kwargs"], [7, 5, 1, "", "size"]], "polyfactory.factories.base.BaseFactory.create_factory.params": [[7, 5, 1, "", "bases"], [7, 5, 1, "", "kwargs"], [7, 5, 1, "", "model"]], "polyfactory.factories.base.BaseFactory.create_sync.params": [[7, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.extract_field_build_parameters.params": [[7, 5, 1, "", "build_args"], [7, 5, 1, "", "field_meta"]], "polyfactory.factories.base.BaseFactory.get_field_value.params": [[7, 5, 1, "", "build_context"], [7, 5, 1, "", "field_build_parameters"], [7, 5, 1, "", "field_meta"]], "polyfactory.factories.base.BaseFactory.get_field_value_coverage.params": [[7, 5, 1, "", "build_context"], [7, 5, 1, "", "field_build_parameters"], [7, 5, 1, "", "field_meta"]], "polyfactory.factories.base.BaseFactory.is_batch_factory_type.params": [[7, 5, 1, "", "annotation"]], "polyfactory.factories.base.BaseFactory.is_factory_type.params": [[7, 5, 1, "", "annotation"]], "polyfactory.factories.base.BaseFactory.is_ignored_type.params": [[7, 5, 1, "", "value"]], "polyfactory.factories.base.BaseFactory.is_supported_type.params": [[7, 5, 1, "", "value"]], "polyfactory.factories.base.BaseFactory.process_kwargs.params": [[7, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.process_kwargs_coverage.params": [[7, 5, 1, "", "build_context"], [7, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.seed_random.params": [[7, 5, 1, "", "seed"]], "polyfactory.factories.base.BaseFactory.should_set_field_value.params": [[7, 5, 1, "", "field_meta"], [7, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.should_set_none_value.params": [[7, 5, 1, "", "field_meta"]], "polyfactory.factories.base.BaseFactory.should_use_default_value.params": [[7, 5, 1, "", "field_meta"]], "polyfactory.factories.beanie_odm_factory": [[8, 1, 1, "", "BeanieDocumentFactory"], [8, 1, 1, "", "BeaniePersistenceHandler"]], "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory": [[8, 4, 1, "", "__async_persistence__"], [8, 4, 1, "", "__is_base_factory__"], [8, 2, 1, "", "get_field_value"], [8, 2, 1, "", "is_supported_type"]], "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.get_field_value.params": [[8, 5, 1, "", "field_build_parameters"], [8, 5, 1, "", "field_meta"]], "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.is_supported_type.params": [[8, 5, 1, "", "value"]], "polyfactory.factories.beanie_odm_factory.BeaniePersistenceHandler": [[8, 2, 1, "", "save"], [8, 2, 1, "", "save_many"]], "polyfactory.factories.dataclass_factory": [[9, 1, 1, "", "DataclassFactory"]], "polyfactory.factories.dataclass_factory.DataclassFactory": [[9, 4, 1, "", "__is_base_factory__"], [9, 2, 1, "", "get_model_fields"], [9, 2, 1, "", "is_supported_type"]], "polyfactory.factories.dataclass_factory.DataclassFactory.is_supported_type.params": [[9, 5, 1, "", "value"]], "polyfactory.factories.msgspec_factory": [[11, 1, 1, "", "MsgspecFactory"]], "polyfactory.factories.msgspec_factory.MsgspecFactory": [[11, 4, 1, "", "__is_base_factory__"], [11, 2, 1, "", "get_model_fields"], [11, 2, 1, "", "get_provider_map"], [11, 2, 1, "", "is_supported_type"]], "polyfactory.factories.msgspec_factory.MsgspecFactory.is_supported_type.params": [[11, 5, 1, "", "value"]], "polyfactory.factories.odmantic_odm_factory": [[12, 1, 1, "", "OdmanticModelFactory"]], "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory": [[12, 4, 1, "", "__is_base_factory__"], [12, 2, 1, "", "get_provider_map"], [12, 2, 1, "", "is_supported_type"]], "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory.is_supported_type.params": [[12, 5, 1, "", "value"]], "polyfactory.factories.pydantic_factory": [[13, 1, 1, "", "ModelFactory"], [13, 1, 1, "", "PydanticConstraints"], [13, 1, 1, "", "PydanticFieldMeta"]], "polyfactory.factories.pydantic_factory.ModelFactory": [[13, 4, 1, "", "__is_base_factory__"], [13, 2, 1, "", "build"], [13, 2, 1, "", "get_model_fields"], [13, 2, 1, "", "get_provider_map"], [13, 2, 1, "", "is_custom_root_field"], [13, 2, 1, "", "is_supported_type"], [13, 2, 1, "", "should_set_field_value"]], "polyfactory.factories.pydantic_factory.ModelFactory.build.params": [[13, 5, 1, "", "factory_use_construct"], [13, 5, 1, "", "kwargs"]], "polyfactory.factories.pydantic_factory.ModelFactory.is_custom_root_field.params": [[13, 5, 1, "", "field_meta"]], "polyfactory.factories.pydantic_factory.ModelFactory.is_supported_type.params": [[13, 5, 1, "", "value"]], "polyfactory.factories.pydantic_factory.ModelFactory.should_set_field_value.params": [[13, 5, 1, "", "field_meta"], [13, 5, 1, "", "kwargs"]], "polyfactory.factories.pydantic_factory.PydanticFieldMeta": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "from_field_info"], [13, 2, 1, "", "from_model_field"], [13, 2, 1, "", "get_constraints_metadata"]], "polyfactory.factories.pydantic_factory.PydanticFieldMeta.from_field_info.params": [[13, 5, 1, "", "field_info"], [13, 5, 1, "", "field_name"], [13, 5, 1, "", "max_collection_length"], [13, 5, 1, "", "min_collection_length"], [13, 5, 1, "", "random"], [13, 5, 1, "", "randomize_collection_length"], [13, 5, 1, "", "use_alias"]], "polyfactory.factories.pydantic_factory.PydanticFieldMeta.from_model_field.params": [[13, 5, 1, "", "max_collection_length"], [13, 5, 1, "", "min_collection_length"], [13, 5, 1, "", "model_field"], [13, 5, 1, "", "random"], [13, 5, 1, "", "randomize_collection_length"], [13, 5, 1, "", "use_alias"]], "polyfactory.factories.pydantic_factory.PydanticFieldMeta.get_constraints_metadata.params": [[13, 5, 1, "", "annotation"], [13, 5, 1, "", "random"]], "polyfactory.factories.sqlalchemy_factory": [[14, 1, 1, "", "SQLAASyncPersistence"], [14, 1, 1, "", "SQLASyncPersistence"], [14, 1, 1, "", "SQLAlchemyFactory"]], "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "save"], [14, 2, 1, "", "save_many"]], "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.save.params": [[14, 5, 1, "", "data"]], "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.save_many.params": [[14, 5, 1, "", "data"]], "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "save"], [14, 2, 1, "", "save_many"]], "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.save.params": [[14, 5, 1, "", "data"]], "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.save_many.params": [[14, 5, 1, "", "data"]], "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory": [[14, 4, 1, "", "__config_keys__"], [14, 4, 1, "", "__is_base_factory__"], [14, 4, 1, "", "__set_foreign_keys__"], [14, 4, 1, "", "__set_primary_key__"], [14, 4, 1, "", "__set_relationships__"], [14, 2, 1, "", "get_model_fields"], [14, 2, 1, "", "get_provider_map"], [14, 2, 1, "", "get_sqlalchemy_types"], [14, 2, 1, "", "is_supported_type"]], "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.is_supported_type.params": [[14, 5, 1, "", "value"]], "polyfactory.factories.typed_dict_factory": [[15, 1, 1, "", "TypedDictFactory"]], "polyfactory.factories.typed_dict_factory.TypedDictFactory": [[15, 4, 1, "", "__is_base_factory__"], [15, 2, 1, "", "get_model_fields"], [15, 2, 1, "", "is_supported_type"]], "polyfactory.factories.typed_dict_factory.TypedDictFactory.is_supported_type.params": [[15, 5, 1, "", "value"]], "polyfactory.field_meta": [[16, 1, 1, "", "Constraints"], [16, 1, 1, "", "FieldMeta"], [16, 1, 1, "", "Null"], [16, 1, 1, "", "UrlConstraints"]], "polyfactory.field_meta.FieldMeta": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "from_type"], [16, 2, 1, "", "get_constraints_metadata"], [16, 6, 1, "", "type_args"]], "polyfactory.field_meta.FieldMeta.from_type.params": [[16, 5, 1, "", "annotation"], [16, 5, 1, "", "constraints"], [16, 5, 1, "", "default"], [16, 5, 1, "", "max_collection_length"], [16, 5, 1, "", "min_collection_length"], [16, 5, 1, "", "name"], [16, 5, 1, "", "random"], [16, 5, 1, "", "randomize_collection_length"]], "polyfactory.field_meta.FieldMeta.get_constraints_metadata.params": [[16, 5, 1, "", "annotation"], [16, 5, 1, "", "random"]], "polyfactory.fields": [[17, 1, 1, "", "Fixture"], [17, 1, 1, "", "Ignore"], [17, 1, 1, "", "PostGenerated"], [17, 1, 1, "", "Require"], [17, 1, 1, "", "Use"], [17, 1, 1, "", "WrappedCallable"]], "polyfactory.fields.Fixture": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "to_value"]], "polyfactory.fields.Fixture.params": [[17, 5, 1, "", "fixture"], [17, 5, 1, "", "kwargs"], [17, 5, 1, "", "size"]], "polyfactory.fields.PostGenerated": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "to_value"]], "polyfactory.fields.PostGenerated.params": [[17, 5, 1, "", "args"], [17, 5, 1, "", "fn"], [17, 5, 1, "", "kwargs"]], "polyfactory.fields.PostGenerated.to_value.params": [[17, 5, 1, "", "name"], [17, 5, 1, "", "values"]], "polyfactory.fields.Use": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "to_value"]], "polyfactory.fields.Use.params": [[17, 5, 1, "", "args"], [17, 5, 1, "", "fn"], [17, 5, 1, "", "kwargs"]], "polyfactory.persistence": [[19, 1, 1, "", "AsyncPersistenceProtocol"], [19, 1, 1, "", "SyncPersistenceProtocol"]], "polyfactory.persistence.AsyncPersistenceProtocol": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "save"], [19, 2, 1, "", "save_many"]], "polyfactory.persistence.AsyncPersistenceProtocol.save.params": [[19, 5, 1, "", "data"]], "polyfactory.persistence.AsyncPersistenceProtocol.save_many.params": [[19, 5, 1, "", "data"]], "polyfactory.persistence.SyncPersistenceProtocol": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "save"], [19, 2, 1, "", "save_many"]], "polyfactory.persistence.SyncPersistenceProtocol.save.params": [[19, 5, 1, "", "data"]], "polyfactory.persistence.SyncPersistenceProtocol.save_many.params": [[19, 5, 1, "", "data"]], "polyfactory.pytest_plugin": [[20, 1, 1, "", "FactoryFixture"], [20, 7, 1, "", "register_fixture"]], "polyfactory.pytest_plugin.FactoryFixture": [[20, 2, 1, "", "__call__"], [20, 2, 1, "", "__init__"]], "polyfactory.pytest_plugin.FactoryFixture.params": [[20, 5, 1, "", "autouse"], [20, 5, 1, "", "name"], [20, 5, 1, "", "scope"]], "polyfactory.pytest_plugin.register_fixture.params": [[20, 5, 1, "", "autouse"], [20, 5, 1, "", "factory"], [20, 5, 1, "", "name"], [20, 5, 1, "", "scope"]], "polyfactory.value_generators": [[21, 0, 0, "-", "complex_types"], [22, 0, 0, "-", "constrained_collections"], [23, 0, 0, "-", "constrained_dates"], [24, 0, 0, "-", "constrained_numbers"], [25, 0, 0, "-", "constrained_strings"], [27, 0, 0, "-", "primitives"]], "polyfactory.value_generators.complex_types": [[21, 7, 1, "", "handle_collection_type"], [21, 7, 1, "", "handle_collection_type_coverage"]], "polyfactory.value_generators.complex_types.handle_collection_type.params": [[21, 5, 1, "", "container_type"], [21, 5, 1, "", "factory"], [21, 5, 1, "", "field_meta"]], "polyfactory.value_generators.complex_types.handle_collection_type_coverage.params": [[21, 5, 1, "", "container_type"], [21, 5, 1, "", "factory"], [21, 5, 1, "", "field_meta"]], "polyfactory.value_generators.constrained_collections": [[22, 7, 1, "", "handle_constrained_collection"], [22, 7, 1, "", "handle_constrained_mapping"]], "polyfactory.value_generators.constrained_collections.handle_constrained_collection.params": [[22, 5, 1, "", "collection_type"], [22, 5, 1, "", "factory"], [22, 5, 1, "", "field_meta"], [22, 5, 1, "", "item_type"], [22, 5, 1, "", "max_items"], [22, 5, 1, "", "min_items"], [22, 5, 1, "", "unique_items"]], "polyfactory.value_generators.constrained_collections.handle_constrained_mapping.params": [[22, 5, 1, "", "factory"], [22, 5, 1, "", "field_meta"], [22, 5, 1, "", "max_items"], [22, 5, 1, "", "min_items"]], "polyfactory.value_generators.constrained_dates": [[23, 7, 1, "", "handle_constrained_date"]], "polyfactory.value_generators.constrained_dates.handle_constrained_date.params": [[23, 5, 1, "", "faker"], [23, 5, 1, "", "ge"], [23, 5, 1, "", "gt"], [23, 5, 1, "", "le"], [23, 5, 1, "", "lt"], [23, 5, 1, "", "tz"]], "polyfactory.value_generators.constrained_numbers": [[24, 1, 1, "", "NumberGeneratorProtocol"], [24, 7, 1, "", "almost_equal_floats"], [24, 7, 1, "", "generate_constrained_number"], [24, 7, 1, "", "get_constrained_number_range"], [24, 7, 1, "", "get_increment"], [24, 7, 1, "", "get_value_or_none"], [24, 7, 1, "", "handle_constrained_decimal"], [24, 7, 1, "", "handle_constrained_float"], [24, 7, 1, "", "handle_constrained_int"], [24, 7, 1, "", "handle_decimal_length"], [24, 7, 1, "", "is_multiply_of_multiple_of_in_range"], [24, 7, 1, "", "passes_pydantic_multiple_validator"], [24, 7, 1, "", "validate_max_digits"]], "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol": [[24, 2, 1, "", "__call__"], [24, 2, 1, "", "__init__"]], "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol.__call__.params": [[24, 5, 1, "", "maximum"], [24, 5, 1, "", "minimum"], [24, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.almost_equal_floats.params": [[24, 5, 1, "", "delta"], [24, 5, 1, "", "value_1"], [24, 5, 1, "", "value_2"]], "polyfactory.value_generators.constrained_numbers.generate_constrained_number.params": [[24, 5, 1, "", "maximum"], [24, 5, 1, "", "method"], [24, 5, 1, "", "minimum"], [24, 5, 1, "", "multiple_of"], [24, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.get_constrained_number_range.params": [[24, 5, 1, "", "ge"], [24, 5, 1, "", "gt"], [24, 5, 1, "", "le"], [24, 5, 1, "", "lt"], [24, 5, 1, "", "multiple_of"], [24, 5, 1, "", "random"], [24, 5, 1, "", "t_type"]], "polyfactory.value_generators.constrained_numbers.get_increment.params": [[24, 5, 1, "", "t_type"]], "polyfactory.value_generators.constrained_numbers.get_value_or_none.params": [[24, 5, 1, "", "constrained"], [24, 5, 1, "", "equal_value"], [24, 5, 1, "", "increment"]], "polyfactory.value_generators.constrained_numbers.handle_constrained_decimal.params": [[24, 5, 1, "", "decimal_places"], [24, 5, 1, "", "ge"], [24, 5, 1, "", "gt"], [24, 5, 1, "", "le"], [24, 5, 1, "", "lt"], [24, 5, 1, "", "max_digits"], [24, 5, 1, "", "multiple_of"], [24, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.handle_constrained_float.params": [[24, 5, 1, "", "ge"], [24, 5, 1, "", "gt"], [24, 5, 1, "", "le"], [24, 5, 1, "", "lt"], [24, 5, 1, "", "multiple_of"], [24, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.handle_constrained_int.params": [[24, 5, 1, "", "ge"], [24, 5, 1, "", "gt"], [24, 5, 1, "", "le"], [24, 5, 1, "", "lt"], [24, 5, 1, "", "multiple_of"], [24, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.handle_decimal_length.params": [[24, 5, 1, "", "decimal_places"], [24, 5, 1, "", "generated_decimal"], [24, 5, 1, "", "max_digits"]], "polyfactory.value_generators.constrained_numbers.is_multiply_of_multiple_of_in_range.params": [[24, 5, 1, "", "maximum"], [24, 5, 1, "", "minimum"], [24, 5, 1, "", "multiple_of"]], "polyfactory.value_generators.constrained_numbers.passes_pydantic_multiple_validator.params": [[24, 5, 1, "", "multiple_of"], [24, 5, 1, "", "value"]], "polyfactory.value_generators.constrained_numbers.validate_max_digits.params": [[24, 5, 1, "", "decimal_places"], [24, 5, 1, "", "max_digits"], [24, 5, 1, "", "minimum"]], "polyfactory.value_generators.constrained_strings": [[25, 7, 1, "", "handle_constrained_string_or_bytes"]], "polyfactory.value_generators.constrained_strings.handle_constrained_string_or_bytes.params": [[25, 5, 1, "", "lower_case"], [25, 5, 1, "", "max_length"], [25, 5, 1, "", "min_length"], [25, 5, 1, "", "pattern"], [25, 5, 1, "", "random"], [25, 5, 1, "", "t_type"], [25, 5, 1, "", "upper_case"]], "polyfactory.value_generators.primitives": [[27, 7, 1, "", "create_random_boolean"], [27, 7, 1, "", "create_random_bytes"], [27, 7, 1, "", "create_random_decimal"], [27, 7, 1, "", "create_random_float"], [27, 7, 1, "", "create_random_integer"], [27, 7, 1, "", "create_random_string"]], "polyfactory.value_generators.primitives.create_random_boolean.params": [[27, 5, 1, "", "random"]], "polyfactory.value_generators.primitives.create_random_bytes.params": [[27, 5, 1, "", "lower_case"], [27, 5, 1, "", "max_length"], [27, 5, 1, "", "min_length"], [27, 5, 1, "", "random"], [27, 5, 1, "", "upper_case"]], "polyfactory.value_generators.primitives.create_random_decimal.params": [[27, 5, 1, "", "maximum"], [27, 5, 1, "", "minimum"], [27, 5, 1, "", "random"]], "polyfactory.value_generators.primitives.create_random_float.params": [[27, 5, 1, "", "maximum"], [27, 5, 1, "", "minimum"], [27, 5, 1, "", "random"]], "polyfactory.value_generators.primitives.create_random_integer.params": [[27, 5, 1, "", "maximum"], [27, 5, 1, "", "minimum"], [27, 5, 1, "", "random"]], "polyfactory.value_generators.primitives.create_random_string.params": [[27, 5, 1, "", "lower_case"], [27, 5, 1, "", "max_length"], [27, 5, 1, "", "min_length"], [27, 5, 1, "", "random"], [27, 5, 1, "", "upper_case"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:attribute", "5": "py:parameter", "6": "py:property", "7": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "parameter", "Python parameter"], "6": ["py", "property", "Python property"], "7": ["py", "function", "Python function"]}, "titleterms": {"changelog": 0, "unreleas": 0, "bug": 0, "fix": 0, "miscellan": 0, "task": 0, "releas": [0, 1, 28], "v2": 0, "15": 0, "0": 0, "2024": 0, "03": 0, "02": 0, "document": [0, 1], "featur": 0, "refactor": 0, "test": 0, "14": 0, "1": 0, "01": 0, "20": 0, "19": 0, "13": 0, "2023": 0, "12": 0, "11": 0, "10": 0, "23": 0, "16": 0, "ci": 0, "infra": 0, "9": 0, "09": 0, "8": 0, "2": 0, "08": 0, "26": 0, "7": 0, "meta": 0, "07": 0, "28": 0, "6": 0, "3": 0, "21": 0, "5": 0, "06": 0, "30": 0, "4": 0, "25": 0, "22": 0, "18": 0, "05": 0, "enhanc": 0, "04": 0, "0alpha1": 0, "doc": [0, 1], "contribut": 1, "set": [1, 29], "up": 1, "environ": 1, "code": 1, "workflow": 1, "project": 1, "theme": 1, "appear": 1, "run": 1, "local": 1, "write": 1, "edit": 1, "creat": [1, 34], "new": 1, "polyfactori": [2, 28, 36], "instal": 2, "exampl": 2, "relat": 2, "pydant": 2, "factori": [2, 10, 29, 30, 32, 34, 36], "constant": 3, "decor": [4, 31], "except": 5, "attrs_factori": 6, "base_factori": 7, "beanie_odm_factori": 8, "dataclass_factori": 9, "msgspec_factori": 11, "odmantic_odm_factori": 12, "pydantic_factori": 13, "sqlalchemy_factori": 14, "typed_dict_factori": 15, "field_meta": 16, "field": [17, 29, 32, 33], "api": [18, 37], "refer": [18, 37], "articl": [18, 35], "persist": [19, 29, 37], "pytest_plugin": 20, "complex_typ": 21, "constrained_collect": 22, "constrained_d": 23, "constrained_numb": 24, "constrained_str": 25, "value_gener": 26, "primit": 27, "version": 28, "number": 28, "pre": 28, "long": 28, "term": 28, "support": 28, "lt": 28, "deprec": 28, "polici": 28, "process": 28, "configur": [29, 37], "seed": 29, "random": 29, "faker": 29, "handler": 29, "defin": 29, "default": 29, "collect": [29, 38], "length": 29, "allow": 29, "none": 29, "option": 29, "check": 29, "us": [29, 32], "valu": 29, "declar": 30, "imper": 30, "creation": 30, "The": [31, 32, 33], "post_gener": 31, "ignor": 32, "requir": 32, "postgener": 32, "pytest": 33, "fixtur": 33, "handl": 34, "custom": 34, "type": [34, 38], "base": 34, "usag": 35, "guid": 35, "sqlalchemyfactori": 37, "ad": 37, "global": 37, "overrid": 37, "model": 38, "coverag": 38, "gener": 38, "note": 38, "known": 38, "limit": 38}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"Handling Custom Types": [[34, "handling-custom-types"]], "Creating Custom Base Factories": [[34, "creating-custom-base-factories"]], "Factory Configuration": [[29, "factory-configuration"]], "Seeding Randomness": [[29, "seeding-randomness"]], "Setting Random": [[29, "setting-random"]], "Setting Faker": [[29, "setting-faker"]], "Persistence Handlers": [[29, "persistence-handlers"]], "Defining Default Factories": [[29, "defining-default-factories"]], "Randomized Collection Length": [[29, "randomized-collection-length"]], "Allow None Optionals": [[29, "allow-none-optionals"]], "Check Factory Fields": [[29, "check-factory-fields"]], "Use Default Values": [[29, "use-default-values"]], "Factory Fields": [[32, "factory-fields"]], "The Use Field": [[32, "the-use-field"]], "The Ignore Field": [[32, "the-ignore-field"]], "The Require Field": [[32, "the-require-field"]], "The PostGenerated Field": [[32, "the-postgenerated-field"]], "Factories as Fields": [[32, "factories-as-fields"]], "Pytest fixtures": [[33, "pytest-fixtures"]], "The Fixture Field": [[33, "the-fixture-field"]], "Polyfactory Releases": [[28, "polyfactory-releases"]], "Version Numbering": [[28, "version-numbering"]], "Pre-release Versions": [[28, "pre-release-versions"]], "Long-term Support Releases (LTS)": [[28, "long-term-support-releases-lts"]], "Deprecation Policy": [[28, "deprecation-policy"]], "Supported Versions": [[28, "id1"]], "Release Process": [[28, "release-process"]], "Declaring Factories": [[30, "declaring-factories"]], "Imperative Factory Creation": [[30, "imperative-factory-creation"]], "Usage Guide": [[35, "usage-guide"]], "Articles": [[35, null], [18, null]], "The post_generated decorator": [[31, "the-post-generated-decorator"]], "primitives": [[27, "module-polyfactory.value_generators.primitives"]], "Model coverage generation": [[38, "model-coverage-generation"]], "Notes on collection types": [[38, "notes-on-collection-types"]], "Known Limitations": [[38, "known-limitations"]], "SQLAlchemyFactory": [[37, "sqlalchemyfactory"]], "Configuration": [[37, "configuration"]], "Persistence": [[37, "persistence"]], "Adding global overrides": [[37, "adding-global-overrides"]], "API reference": [[37, "api-reference"]], "Polyfactory Factories": [[36, "polyfactory-factories"]], "constrained_collections": [[22, "module-polyfactory.value_generators.constrained_collections"]], "persistence": [[19, "module-polyfactory.persistence"]], "pytest_plugin": [[20, "module-polyfactory.pytest_plugin"]], "constrained_strings": [[25, "module-polyfactory.value_generators.constrained_strings"]], "API Reference": [[18, "api-reference"]], "value_generators": [[26, "value-generators"]], "constrained_dates": [[23, "module-polyfactory.value_generators.constrained_dates"]], "constrained_numbers": [[24, "module-polyfactory.value_generators.constrained_numbers"]], "complex_types": [[21, "module-polyfactory.value_generators.complex_types"]], "constants": [[3, "constants"]], "exceptions": [[5, "module-polyfactory.exceptions"]], "base_factory": [[7, "module-polyfactory.factories.base"]], "Polyfactory": [[2, "polyfactory"]], "Installation": [[2, "installation"]], "Example": [[2, "example"]], "Relation to pydantic-factories": [[2, "relation-to-pydantic-factories"]], "attrs_factory": [[6, "module-polyfactory.factories.attrs_factory"]], "beanie_odm_factory": [[8, "module-polyfactory.factories.beanie_odm_factory"]], "Contributing": [[1, "contributing"]], "Setting up the environment": [[1, "setting-up-the-environment"]], "Code contributions": [[1, "code-contributions"]], "Workflow": [[1, "workflow"]], "Project documentation": [[1, "project-documentation"]], "Docs theme and appearance": [[1, "docs-theme-and-appearance"]], "Running the docs locally": [[1, "running-the-docs-locally"]], "Writing and editing docs": [[1, "writing-and-editing-docs"]], "Creating a new release": [[1, "creating-a-new-release"]], "decorators": [[4, "module-polyfactory.decorators"]], "Changelog": [[0, "changelog"]], "[unreleased]": [[0, "unreleased"]], "Bug Fixes": [[0, "bug-fixes"], [0, "id8"], [0, "id26"], [0, "id34"], [0, "id64"], [0, "id90"], [0, "id104"], [0, "id130"], [0, "id158"], [0, "id190"], [0, "id201"], [0, "id221"], [0, "id236"], [0, "id242"], [0, "id271"], [0, "id307"], [0, "id333"], [0, "id393"], [0, "id404"], [0, "id430"]], "Miscellaneous Tasks": [[0, "miscellaneous-tasks"], [0, "id15"], [0, "id29"], [0, "id55"], [0, "id70"], [0, "id124"], [0, "id143"], [0, "id177"], [0, "id213"], [0, "id231"], [0, "id276"], [0, "id290"], [0, "id301"], [0, "id321"], [0, "id380"], [0, "id389"], [0, "id399"], [0, "id423"], [0, "id449"]], "Release [v2.15.0] - 2024-03-02": [[0, "id6"]], "Documentation": [[0, "documentation"], [0, "id38"], [0, "id95"], [0, "id108"], [0, "id137"], [0, "id166"], [0, "id196"], [0, "id206"], [0, "id224"], [0, "id250"], [0, "id261"], [0, "id295"], [0, "id311"], [0, "id336"], [0, "id384"], [0, "id396"], [0, "id407"], [0, "id418"], [0, "id432"], [0, "id445"]], "Features": [[0, "features"], [0, "id46"], [0, "id68"], [0, "id98"], [0, "id117"], [0, "id140"], [0, "id174"], [0, "id227"], [0, "id263"], [0, "id285"], [0, "id318"], [0, "id447"]], "Refactor": [[0, "refactor"], [0, "id147"]], "Testing": [[0, "testing"], [0, "id181"]], "Release [v2.14.1] - 2024-01-20": [[0, "id24"]], "Release [v2.14.0] - 2024-01-19": [[0, "id32"]], "Release [v2.13.0] - 2023-12-19": [[0, "id62"]], "Release [v2.12.0] - 2023-11-13": [[0, "id88"]], "Release [v2.11.0] - 2023-10-23": [[0, "id102"]], "Release [v2.10.0] - 2023-10-16": [[0, "id128"]], "Ci": [[0, "ci"]], "Infra": [[0, "infra"], [0, "id185"], [0, "id255"], [0, "id266"]], "Release [v2.9.0] - 2023-09-19": [[0, "id156"]], "Release [v2.8.2] - 2023-09-15": [[0, "id188"]], "Release [v2.8.1] - 2023-09-10": [[0, "id199"]], "Release [v2.8.0] - 2023-08-26": [[0, "id219"]], "Release [v2.7.2] - 2023-08-09": [[0, "id234"]], "Release [v2.7.1] - 2023-08-08": [[0, "id240"]], "Meta": [[0, "meta"]], "Release [v2.7.0] - 2023-07-28": [[0, "id259"]], "Release [v2.6.3] - 2023-07-21": [[0, "id269"]], "Release [v2.6.2] - 2023-07-14": [[0, "id283"]], "Release [v2.6.1] - 2023-07-10": [[0, "id293"]], "Release [v2.6.0] - 2023-07-09": [[0, "id299"]], "Release [v2.5.0] - 2023-06-30": [[0, "id305"]], "Release": [[0, "release"]], "Release [v2.4.0] - 2023-06-25": [[0, "id330"]], "Fix": [[0, "fix"], [0, "id414"]], "Release [v2.3.3] - 2023-06-22": [[0, "id382"]], "Release [v2.3.2] - 2023-06-18": [[0, "id387"]], "Release [v2.1.2] - 2023-05-28": [[0, "id392"]], "Release [v2.1.0] - 2023-05-06": [[0, "id403"]], "Enhancement": [[0, "enhancement"]], "Release [v2.0.1] - 2023-04-28": [[0, "id416"]], "Release [v2.0.0] - 2023-04-16": [[0, "id428"]], "Release [v2.0.0alpha1] - 2023-04-11": [[0, "id441"]], "Docs": [[0, "docs"]], "typed_dict_factory": [[15, "module-polyfactory.factories.typed_dict_factory"]], "factories": [[10, "factories"]], "msgspec_factory": [[11, "module-polyfactory.factories.msgspec_factory"]], "odmantic_odm_factory": [[12, "module-polyfactory.factories.odmantic_odm_factory"]], "dataclass_factory": [[9, "module-polyfactory.factories.dataclass_factory"]], "field_meta": [[16, "module-polyfactory.field_meta"]], "fields": [[17, "module-polyfactory.fields"]], "sqlalchemy_factory": [[14, "module-polyfactory.factories.sqlalchemy_factory"]], "pydantic_factory": [[13, "module-polyfactory.factories.pydantic_factory"]]}, "indexentries": {"module": [[3, "module-polyfactory.constants"], [4, "module-polyfactory.decorators"], [5, "module-polyfactory.exceptions"], [6, "module-polyfactory.factories.attrs_factory"], [7, "module-polyfactory.factories.base"], [8, "module-polyfactory.factories.beanie_odm_factory"], [9, "module-polyfactory.factories.dataclass_factory"], [11, "module-polyfactory.factories.msgspec_factory"], [12, "module-polyfactory.factories.odmantic_odm_factory"], [13, "module-polyfactory.factories.pydantic_factory"], [14, "module-polyfactory.factories.sqlalchemy_factory"], [15, "module-polyfactory.factories.typed_dict_factory"], [16, "module-polyfactory.field_meta"], [17, "module-polyfactory.fields"], [19, "module-polyfactory.persistence"], [20, "module-polyfactory.pytest_plugin"], [21, "module-polyfactory.value_generators.complex_types"], [22, "module-polyfactory.value_generators.constrained_collections"], [23, "module-polyfactory.value_generators.constrained_dates"], [24, "module-polyfactory.value_generators.constrained_numbers"], [25, "module-polyfactory.value_generators.constrained_strings"], [27, "module-polyfactory.value_generators.primitives"]], "polyfactory.constants": [[3, "module-polyfactory.constants"]], "__init__() (polyfactory.decorators.post_generated method)": [[4, "polyfactory.decorators.post_generated.__init__"]], "polyfactory.decorators": [[4, "module-polyfactory.decorators"]], "post_generated (class in polyfactory.decorators)": [[4, "polyfactory.decorators.post_generated"]], "configurationexception": [[5, "polyfactory.exceptions.ConfigurationException"]], "factoryexception": [[5, "polyfactory.exceptions.FactoryException"]], "missingbuildkwargexception": [[5, "polyfactory.exceptions.MissingBuildKwargException"]], "missingdependencyexception": [[5, "polyfactory.exceptions.MissingDependencyException"]], "parameterexception": [[5, "polyfactory.exceptions.ParameterException"]], "polyfactory.exceptions": [[5, "module-polyfactory.exceptions"]], "attrsfactory (class in polyfactory.factories.attrs_factory)": [[6, "polyfactory.factories.attrs_factory.AttrsFactory"]], "__is_base_factory__ (polyfactory.factories.attrs_factory.attrsfactory attribute)": [[6, "polyfactory.factories.attrs_factory.AttrsFactory.__is_base_factory__"]], "__model__ (polyfactory.factories.attrs_factory.attrsfactory attribute)": [[6, "polyfactory.factories.attrs_factory.AttrsFactory.__model__"]], "get_model_fields() (polyfactory.factories.attrs_factory.attrsfactory class method)": [[6, "polyfactory.factories.attrs_factory.AttrsFactory.get_model_fields"]], "is_supported_type() (polyfactory.factories.attrs_factory.attrsfactory class method)": [[6, "polyfactory.factories.attrs_factory.AttrsFactory.is_supported_type"]], "polyfactory.factories.attrs_factory": [[6, "module-polyfactory.factories.attrs_factory"]], "resolve_types() (polyfactory.factories.attrs_factory.attrsfactory class method)": [[6, "polyfactory.factories.attrs_factory.AttrsFactory.resolve_types"]], "basefactory (class in polyfactory.factories.base)": [[7, "polyfactory.factories.base.BaseFactory"]], "buildcontext (class in polyfactory.factories.base)": [[7, "polyfactory.factories.base.BuildContext"]], "__allow_none_optionals__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__allow_none_optionals__"]], "__async_persistence__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__async_persistence__"]], "__base_factory_overrides__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__base_factory_overrides__"]], "__check_model__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__check_model__"]], "__config_keys__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__config_keys__"]], "__faker__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__faker__"]], "__is_base_factory__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__is_base_factory__"]], "__max_collection_length__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__max_collection_length__"]], "__min_collection_length__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__min_collection_length__"]], "__model__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__model__"]], "__random__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__random__"]], "__random_seed__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__random_seed__"]], "__randomize_collection_length__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__randomize_collection_length__"]], "__set_as_default_factory_for_type__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__set_as_default_factory_for_type__"]], "__sync_persistence__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__sync_persistence__"]], "__use_defaults__ (polyfactory.factories.base.basefactory attribute)": [[7, "polyfactory.factories.base.BaseFactory.__use_defaults__"]], "batch() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.batch"]], "build() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.build"]], "coverage() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.coverage"]], "create_async() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.create_async"]], "create_batch_async() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.create_batch_async"]], "create_batch_sync() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.create_batch_sync"]], "create_factory() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.create_factory"]], "create_sync() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.create_sync"]], "extract_field_build_parameters() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.extract_field_build_parameters"]], "get_factory_fields() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.get_factory_fields"]], "get_field_value() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.get_field_value"]], "get_field_value_coverage() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.get_field_value_coverage"]], "get_model_fields() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.get_model_fields"]], "get_provider_map() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.get_provider_map"]], "is_batch_factory_type() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.is_batch_factory_type"]], "is_factory_type() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.is_factory_type"]], "is_ignored_type() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.is_ignored_type"]], "is_supported_type() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.is_supported_type"]], "polyfactory.factories.base": [[7, "module-polyfactory.factories.base"]], "process_kwargs() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.process_kwargs"]], "process_kwargs_coverage() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.process_kwargs_coverage"]], "seed_random() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.seed_random"]], "should_set_field_value() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.should_set_field_value"]], "should_set_none_value() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.should_set_none_value"]], "should_use_default_value() (polyfactory.factories.base.basefactory class method)": [[7, "polyfactory.factories.base.BaseFactory.should_use_default_value"]], "beaniedocumentfactory (class in polyfactory.factories.beanie_odm_factory)": [[8, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory"]], "beaniepersistencehandler (class in polyfactory.factories.beanie_odm_factory)": [[8, "polyfactory.factories.beanie_odm_factory.BeaniePersistenceHandler"]], "__async_persistence__ (polyfactory.factories.beanie_odm_factory.beaniedocumentfactory attribute)": [[8, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.__async_persistence__"]], "__is_base_factory__ (polyfactory.factories.beanie_odm_factory.beaniedocumentfactory attribute)": [[8, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.__is_base_factory__"]], "get_field_value() (polyfactory.factories.beanie_odm_factory.beaniedocumentfactory class method)": [[8, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.get_field_value"]], "is_supported_type() (polyfactory.factories.beanie_odm_factory.beaniedocumentfactory class method)": [[8, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.is_supported_type"]], "polyfactory.factories.beanie_odm_factory": [[8, "module-polyfactory.factories.beanie_odm_factory"]], "save() (polyfactory.factories.beanie_odm_factory.beaniepersistencehandler method)": [[8, "polyfactory.factories.beanie_odm_factory.BeaniePersistenceHandler.save"]], "save_many() (polyfactory.factories.beanie_odm_factory.beaniepersistencehandler method)": [[8, "polyfactory.factories.beanie_odm_factory.BeaniePersistenceHandler.save_many"]], "dataclassfactory (class in polyfactory.factories.dataclass_factory)": [[9, "polyfactory.factories.dataclass_factory.DataclassFactory"]], "__is_base_factory__ (polyfactory.factories.dataclass_factory.dataclassfactory attribute)": [[9, "polyfactory.factories.dataclass_factory.DataclassFactory.__is_base_factory__"]], "get_model_fields() (polyfactory.factories.dataclass_factory.dataclassfactory class method)": [[9, "polyfactory.factories.dataclass_factory.DataclassFactory.get_model_fields"]], "is_supported_type() (polyfactory.factories.dataclass_factory.dataclassfactory class method)": [[9, "polyfactory.factories.dataclass_factory.DataclassFactory.is_supported_type"]], "polyfactory.factories.dataclass_factory": [[9, "module-polyfactory.factories.dataclass_factory"]], "msgspecfactory (class in polyfactory.factories.msgspec_factory)": [[11, "polyfactory.factories.msgspec_factory.MsgspecFactory"]], "__is_base_factory__ (polyfactory.factories.msgspec_factory.msgspecfactory attribute)": [[11, "polyfactory.factories.msgspec_factory.MsgspecFactory.__is_base_factory__"]], "get_model_fields() (polyfactory.factories.msgspec_factory.msgspecfactory class method)": [[11, "polyfactory.factories.msgspec_factory.MsgspecFactory.get_model_fields"]], "get_provider_map() (polyfactory.factories.msgspec_factory.msgspecfactory class method)": [[11, "polyfactory.factories.msgspec_factory.MsgspecFactory.get_provider_map"]], "is_supported_type() (polyfactory.factories.msgspec_factory.msgspecfactory class method)": [[11, "polyfactory.factories.msgspec_factory.MsgspecFactory.is_supported_type"]], "polyfactory.factories.msgspec_factory": [[11, "module-polyfactory.factories.msgspec_factory"]], "odmanticmodelfactory (class in polyfactory.factories.odmantic_odm_factory)": [[12, "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory"]], "__is_base_factory__ (polyfactory.factories.odmantic_odm_factory.odmanticmodelfactory attribute)": [[12, "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory.__is_base_factory__"]], "get_provider_map() (polyfactory.factories.odmantic_odm_factory.odmanticmodelfactory class method)": [[12, "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory.get_provider_map"]], "is_supported_type() (polyfactory.factories.odmantic_odm_factory.odmanticmodelfactory class method)": [[12, "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory.is_supported_type"]], "polyfactory.factories.odmantic_odm_factory": [[12, "module-polyfactory.factories.odmantic_odm_factory"]], "modelfactory (class in polyfactory.factories.pydantic_factory)": [[13, "polyfactory.factories.pydantic_factory.ModelFactory"]], "pydanticconstraints (class in polyfactory.factories.pydantic_factory)": [[13, "polyfactory.factories.pydantic_factory.PydanticConstraints"]], "pydanticfieldmeta (class in polyfactory.factories.pydantic_factory)": [[13, "polyfactory.factories.pydantic_factory.PydanticFieldMeta"]], "__init__() (polyfactory.factories.pydantic_factory.pydanticfieldmeta method)": [[13, "polyfactory.factories.pydantic_factory.PydanticFieldMeta.__init__"]], "__is_base_factory__ (polyfactory.factories.pydantic_factory.modelfactory attribute)": [[13, "polyfactory.factories.pydantic_factory.ModelFactory.__is_base_factory__"]], "build() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[13, "polyfactory.factories.pydantic_factory.ModelFactory.build"]], "from_field_info() (polyfactory.factories.pydantic_factory.pydanticfieldmeta class method)": [[13, "polyfactory.factories.pydantic_factory.PydanticFieldMeta.from_field_info"]], "from_model_field() (polyfactory.factories.pydantic_factory.pydanticfieldmeta class method)": [[13, "polyfactory.factories.pydantic_factory.PydanticFieldMeta.from_model_field"]], "get_constraints_metadata() (polyfactory.factories.pydantic_factory.pydanticfieldmeta class method)": [[13, "polyfactory.factories.pydantic_factory.PydanticFieldMeta.get_constraints_metadata"]], "get_model_fields() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[13, "polyfactory.factories.pydantic_factory.ModelFactory.get_model_fields"]], "get_provider_map() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[13, "polyfactory.factories.pydantic_factory.ModelFactory.get_provider_map"]], "is_custom_root_field() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[13, "polyfactory.factories.pydantic_factory.ModelFactory.is_custom_root_field"]], "is_supported_type() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[13, "polyfactory.factories.pydantic_factory.ModelFactory.is_supported_type"]], "polyfactory.factories.pydantic_factory": [[13, "module-polyfactory.factories.pydantic_factory"]], "should_set_field_value() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[13, "polyfactory.factories.pydantic_factory.ModelFactory.should_set_field_value"]], "sqlaasyncpersistence (class in polyfactory.factories.sqlalchemy_factory)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence"]], "sqlasyncpersistence (class in polyfactory.factories.sqlalchemy_factory)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence"]], "sqlalchemyfactory (class in polyfactory.factories.sqlalchemy_factory)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory"]], "__config_keys__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__config_keys__"]], "__init__() (polyfactory.factories.sqlalchemy_factory.sqlaasyncpersistence method)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.__init__"]], "__init__() (polyfactory.factories.sqlalchemy_factory.sqlasyncpersistence method)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.__init__"]], "__is_base_factory__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__is_base_factory__"]], "__set_foreign_keys__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__set_foreign_keys__"]], "__set_primary_key__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__set_primary_key__"]], "__set_relationships__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__set_relationships__"]], "get_model_fields() (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory class method)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.get_model_fields"]], "get_provider_map() (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory class method)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.get_provider_map"]], "get_sqlalchemy_types() (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory class method)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.get_sqlalchemy_types"]], "is_supported_type() (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory class method)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.is_supported_type"]], "polyfactory.factories.sqlalchemy_factory": [[14, "module-polyfactory.factories.sqlalchemy_factory"]], "save() (polyfactory.factories.sqlalchemy_factory.sqlaasyncpersistence method)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.save"]], "save() (polyfactory.factories.sqlalchemy_factory.sqlasyncpersistence method)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.save"]], "save_many() (polyfactory.factories.sqlalchemy_factory.sqlaasyncpersistence method)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.save_many"]], "save_many() (polyfactory.factories.sqlalchemy_factory.sqlasyncpersistence method)": [[14, "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.save_many"]], "typeddictfactory (class in polyfactory.factories.typed_dict_factory)": [[15, "polyfactory.factories.typed_dict_factory.TypedDictFactory"]], "__is_base_factory__ (polyfactory.factories.typed_dict_factory.typeddictfactory attribute)": [[15, "polyfactory.factories.typed_dict_factory.TypedDictFactory.__is_base_factory__"]], "get_model_fields() (polyfactory.factories.typed_dict_factory.typeddictfactory class method)": [[15, "polyfactory.factories.typed_dict_factory.TypedDictFactory.get_model_fields"]], "is_supported_type() (polyfactory.factories.typed_dict_factory.typeddictfactory class method)": [[15, "polyfactory.factories.typed_dict_factory.TypedDictFactory.is_supported_type"]], "polyfactory.factories.typed_dict_factory": [[15, "module-polyfactory.factories.typed_dict_factory"]], "constraints (class in polyfactory.field_meta)": [[16, "polyfactory.field_meta.Constraints"]], "fieldmeta (class in polyfactory.field_meta)": [[16, "polyfactory.field_meta.FieldMeta"]], "null (class in polyfactory.field_meta)": [[16, "polyfactory.field_meta.Null"]], "urlconstraints (class in polyfactory.field_meta)": [[16, "polyfactory.field_meta.UrlConstraints"]], "__init__() (polyfactory.field_meta.fieldmeta method)": [[16, "polyfactory.field_meta.FieldMeta.__init__"]], "from_type() (polyfactory.field_meta.fieldmeta class method)": [[16, "polyfactory.field_meta.FieldMeta.from_type"]], "get_constraints_metadata() (polyfactory.field_meta.fieldmeta class method)": [[16, "polyfactory.field_meta.FieldMeta.get_constraints_metadata"]], "polyfactory.field_meta": [[16, "module-polyfactory.field_meta"]], "type_args (polyfactory.field_meta.fieldmeta property)": [[16, "polyfactory.field_meta.FieldMeta.type_args"]], "fixture (class in polyfactory.fields)": [[17, "polyfactory.fields.Fixture"]], "ignore (class in polyfactory.fields)": [[17, "polyfactory.fields.Ignore"]], "postgenerated (class in polyfactory.fields)": [[17, "polyfactory.fields.PostGenerated"]], "require (class in polyfactory.fields)": [[17, "polyfactory.fields.Require"]], "use (class in polyfactory.fields)": [[17, "polyfactory.fields.Use"]], "wrappedcallable (class in polyfactory.fields)": [[17, "polyfactory.fields.WrappedCallable"]], "__init__() (polyfactory.fields.fixture method)": [[17, "polyfactory.fields.Fixture.__init__"]], "__init__() (polyfactory.fields.postgenerated method)": [[17, "polyfactory.fields.PostGenerated.__init__"]], "__init__() (polyfactory.fields.use method)": [[17, "polyfactory.fields.Use.__init__"]], "polyfactory.fields": [[17, "module-polyfactory.fields"]], "to_value() (polyfactory.fields.fixture method)": [[17, "polyfactory.fields.Fixture.to_value"]], "to_value() (polyfactory.fields.postgenerated method)": [[17, "polyfactory.fields.PostGenerated.to_value"]], "to_value() (polyfactory.fields.use method)": [[17, "polyfactory.fields.Use.to_value"]], "asyncpersistenceprotocol (class in polyfactory.persistence)": [[19, "polyfactory.persistence.AsyncPersistenceProtocol"]], "syncpersistenceprotocol (class in polyfactory.persistence)": [[19, "polyfactory.persistence.SyncPersistenceProtocol"]], "__init__() (polyfactory.persistence.asyncpersistenceprotocol method)": [[19, "polyfactory.persistence.AsyncPersistenceProtocol.__init__"]], "__init__() (polyfactory.persistence.syncpersistenceprotocol method)": [[19, "polyfactory.persistence.SyncPersistenceProtocol.__init__"]], "polyfactory.persistence": [[19, "module-polyfactory.persistence"]], "save() (polyfactory.persistence.asyncpersistenceprotocol method)": [[19, "polyfactory.persistence.AsyncPersistenceProtocol.save"]], "save() (polyfactory.persistence.syncpersistenceprotocol method)": [[19, "polyfactory.persistence.SyncPersistenceProtocol.save"]], "save_many() (polyfactory.persistence.asyncpersistenceprotocol method)": [[19, "polyfactory.persistence.AsyncPersistenceProtocol.save_many"]], "save_many() (polyfactory.persistence.syncpersistenceprotocol method)": [[19, "polyfactory.persistence.SyncPersistenceProtocol.save_many"]], "factoryfixture (class in polyfactory.pytest_plugin)": [[20, "polyfactory.pytest_plugin.FactoryFixture"]], "__call__() (polyfactory.pytest_plugin.factoryfixture method)": [[20, "polyfactory.pytest_plugin.FactoryFixture.__call__"]], "__init__() (polyfactory.pytest_plugin.factoryfixture method)": [[20, "polyfactory.pytest_plugin.FactoryFixture.__init__"]], "polyfactory.pytest_plugin": [[20, "module-polyfactory.pytest_plugin"]], "register_fixture() (in module polyfactory.pytest_plugin)": [[20, "polyfactory.pytest_plugin.register_fixture"]], "handle_collection_type() (in module polyfactory.value_generators.complex_types)": [[21, "polyfactory.value_generators.complex_types.handle_collection_type"]], "handle_collection_type_coverage() (in module polyfactory.value_generators.complex_types)": [[21, "polyfactory.value_generators.complex_types.handle_collection_type_coverage"]], "polyfactory.value_generators.complex_types": [[21, "module-polyfactory.value_generators.complex_types"]], "handle_constrained_collection() (in module polyfactory.value_generators.constrained_collections)": [[22, "polyfactory.value_generators.constrained_collections.handle_constrained_collection"]], "handle_constrained_mapping() (in module polyfactory.value_generators.constrained_collections)": [[22, "polyfactory.value_generators.constrained_collections.handle_constrained_mapping"]], "polyfactory.value_generators.constrained_collections": [[22, "module-polyfactory.value_generators.constrained_collections"]], "handle_constrained_date() (in module polyfactory.value_generators.constrained_dates)": [[23, "polyfactory.value_generators.constrained_dates.handle_constrained_date"]], "polyfactory.value_generators.constrained_dates": [[23, "module-polyfactory.value_generators.constrained_dates"]], "numbergeneratorprotocol (class in polyfactory.value_generators.constrained_numbers)": [[24, "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol"]], "__call__() (polyfactory.value_generators.constrained_numbers.numbergeneratorprotocol method)": [[24, "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol.__call__"]], "__init__() (polyfactory.value_generators.constrained_numbers.numbergeneratorprotocol method)": [[24, "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol.__init__"]], "almost_equal_floats() (in module polyfactory.value_generators.constrained_numbers)": [[24, "polyfactory.value_generators.constrained_numbers.almost_equal_floats"]], "generate_constrained_number() (in module polyfactory.value_generators.constrained_numbers)": [[24, "polyfactory.value_generators.constrained_numbers.generate_constrained_number"]], "get_constrained_number_range() (in module polyfactory.value_generators.constrained_numbers)": [[24, "polyfactory.value_generators.constrained_numbers.get_constrained_number_range"]], "get_increment() (in module polyfactory.value_generators.constrained_numbers)": [[24, "polyfactory.value_generators.constrained_numbers.get_increment"]], "get_value_or_none() (in module polyfactory.value_generators.constrained_numbers)": [[24, "polyfactory.value_generators.constrained_numbers.get_value_or_none"]], "handle_constrained_decimal() (in module polyfactory.value_generators.constrained_numbers)": [[24, "polyfactory.value_generators.constrained_numbers.handle_constrained_decimal"]], "handle_constrained_float() (in module polyfactory.value_generators.constrained_numbers)": [[24, "polyfactory.value_generators.constrained_numbers.handle_constrained_float"]], "handle_constrained_int() (in module polyfactory.value_generators.constrained_numbers)": [[24, "polyfactory.value_generators.constrained_numbers.handle_constrained_int"]], "handle_decimal_length() (in module polyfactory.value_generators.constrained_numbers)": [[24, "polyfactory.value_generators.constrained_numbers.handle_decimal_length"]], "is_multiply_of_multiple_of_in_range() (in module polyfactory.value_generators.constrained_numbers)": [[24, "polyfactory.value_generators.constrained_numbers.is_multiply_of_multiple_of_in_range"]], "passes_pydantic_multiple_validator() (in module polyfactory.value_generators.constrained_numbers)": [[24, "polyfactory.value_generators.constrained_numbers.passes_pydantic_multiple_validator"]], "polyfactory.value_generators.constrained_numbers": [[24, "module-polyfactory.value_generators.constrained_numbers"]], "validate_max_digits() (in module polyfactory.value_generators.constrained_numbers)": [[24, "polyfactory.value_generators.constrained_numbers.validate_max_digits"]], "handle_constrained_string_or_bytes() (in module polyfactory.value_generators.constrained_strings)": [[25, "polyfactory.value_generators.constrained_strings.handle_constrained_string_or_bytes"]], "polyfactory.value_generators.constrained_strings": [[25, "module-polyfactory.value_generators.constrained_strings"]], "create_random_boolean() (in module polyfactory.value_generators.primitives)": [[27, "polyfactory.value_generators.primitives.create_random_boolean"]], "create_random_bytes() (in module polyfactory.value_generators.primitives)": [[27, "polyfactory.value_generators.primitives.create_random_bytes"]], "create_random_decimal() (in module polyfactory.value_generators.primitives)": [[27, "polyfactory.value_generators.primitives.create_random_decimal"]], "create_random_float() (in module polyfactory.value_generators.primitives)": [[27, "polyfactory.value_generators.primitives.create_random_float"]], "create_random_integer() (in module polyfactory.value_generators.primitives)": [[27, "polyfactory.value_generators.primitives.create_random_integer"]], "create_random_string() (in module polyfactory.value_generators.primitives)": [[27, "polyfactory.value_generators.primitives.create_random_string"]], "polyfactory.value_generators.primitives": [[27, "module-polyfactory.value_generators.primitives"]]}})